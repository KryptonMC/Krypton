/*
 * This file is part of the Krypton API, licensed under the MIT license.
 *
 * Copyright (C) 2021 KryptonMC and the contributors to the Krypton project.
 *
 * This project is licensed under the terms of the MIT license.
 * For more details, please reference the LICENSE file in the api top-level directory.
 */
package org.kryptonmc.api.effect.sound

import net.kyori.adventure.key.Key
import org.kryptonmc.api.registry.Registries

/**
 * All the sound types in the game.
 */
@Suppress("UndocumentedPublicProperty", "LargeClass")
object SoundEvents {

    // @formatter:off
    @JvmField val AMBIENT_CAVE = register("ambient.cave")
    @JvmField val AMBIENT_BASALT_DELTAS_ADDITIONS = register("ambient.basalt_deltas.additions")
    @JvmField val AMBIENT_BASALT_DELTAS_LOOP = register("ambient.basalt_deltas.loop")
    @JvmField val AMBIENT_BASALT_DELTAS_MOOD = register("ambient.basalt_deltas.mood")
    @JvmField val AMBIENT_CRIMSON_FOREST_ADDITIONS = register("ambient.crimson_forest.additions")
    @JvmField val AMBIENT_CRIMSON_FOREST_LOOP = register("ambient.crimson_forest.loop")
    @JvmField val AMBIENT_CRIMSON_FOREST_MOOD = register("ambient.crimson_forest.mood")
    @JvmField val AMBIENT_NETHER_WASTES_ADDITIONS = register("ambient.nether_wastes.additions")
    @JvmField val AMBIENT_NETHER_WASTES_LOOP = register("ambient.nether_wastes.loop")
    @JvmField val AMBIENT_NETHER_WASTES_MOOD = register("ambient.nether_wastes.mood")
    @JvmField val AMBIENT_SOUL_SAND_VALLEY_ADDITIONS = register("ambient.soul_sand_valley.additions")
    @JvmField val AMBIENT_SOUL_SAND_VALLEY_LOOP = register("ambient.soul_sand_valley.loop")
    @JvmField val AMBIENT_SOUL_SAND_VALLEY_MOOD = register("ambient.soul_sand_valley.mood")
    @JvmField val AMBIENT_WARPED_FOREST_ADDITIONS = register("ambient.warped_forest.additions")
    @JvmField val AMBIENT_WARPED_FOREST_LOOP = register("ambient.warped_forest.loop")
    @JvmField val AMBIENT_WARPED_FOREST_MOOD = register("ambient.warped_forest.mood")
    @JvmField val AMBIENT_UNDERWATER_ENTER = register("ambient.underwater.enter")
    @JvmField val AMBIENT_UNDERWATER_EXIT = register("ambient.underwater.exit")
    @JvmField val AMBIENT_UNDERWATER_LOOP = register("ambient.underwater.loop")
    @JvmField val AMBIENT_UNDERWATER_LOOP_ADDITIONS = register("ambient.underwater.loop.additions")
    @JvmField val AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE = register("ambient.underwater.loop.additions.rare")
    @JvmField val AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE = register("ambient.underwater.loop.additions.ultra_rare")
    @JvmField val AMETHYST_BLOCK_BREAK = register("block.amethyst_block.break")
    @JvmField val AMETHYST_BLOCK_CHIME = register("block.amethyst_block.chime")
    @JvmField val AMETHYST_BLOCK_FALL = register("block.amethyst_block.fall")
    @JvmField val AMETHYST_BLOCK_HIT = register("block.amethyst_block.hit")
    @JvmField val AMETHYST_BLOCK_PLACE = register("block.amethyst_block.place")
    @JvmField val AMETHYST_BLOCK_STEP = register("block.amethyst_block.step")
    @JvmField val AMETHYST_CLUSTER_BREAK = register("block.amethyst_cluster.break")
    @JvmField val AMETHYST_CLUSTER_FALL = register("block.amethyst_cluster.fall")
    @JvmField val AMETHYST_CLUSTER_HIT = register("block.amethyst_cluster.hit")
    @JvmField val AMETHYST_CLUSTER_PLACE = register("block.amethyst_cluster.place")
    @JvmField val AMETHYST_CLUSTER_STEP = register("block.amethyst_cluster.step")
    @JvmField val ANCIENT_DEBRIS_BREAK = register("block.ancient_debris.break")
    @JvmField val ANCIENT_DEBRIS_FALL = register("block.ancient_debris.fall")
    @JvmField val ANCIENT_DEBRIS_HIT = register("block.ancient_debris.hit")
    @JvmField val ANCIENT_DEBRIS_PLACE = register("block.ancient_debris.place")
    @JvmField val ANCIENT_DEBRIS_STEP = register("block.ancient_debris.step")
    @JvmField val ANVIL_BREAK = register("block.anvil.break")
    @JvmField val ANVIL_DESTROY = register("block.anvil.destroy")
    @JvmField val ANVIL_FALL = register("block.anvil.fall")
    @JvmField val ANVIL_HIT = register("block.anvil.hit")
    @JvmField val ANVIL_LAND = register("block.anvil.land")
    @JvmField val ANVIL_PLACE = register("block.anvil.place")
    @JvmField val ANVIL_STEP = register("block.anvil.step")
    @JvmField val ANVIL_USE = register("block.anvil.use")
    @JvmField val ARMOR_EQUIP_CHAIN = register("item.armor.equip_chain")
    @JvmField val ARMOR_EQUIP_DIAMOND = register("item.armor.equip_diamond")
    @JvmField val ARMOR_EQUIP_ELYTRA = register("item.armor.equip_elytra")
    @JvmField val ARMOR_EQUIP_GENERIC = register("item.armor.equip_generic")
    @JvmField val ARMOR_EQUIP_GOLD = register("item.armor.equip_gold")
    @JvmField val ARMOR_EQUIP_IRON = register("item.armor.equip_iron")
    @JvmField val ARMOR_EQUIP_LEATHER = register("item.armor.equip_leather")
    @JvmField val ARMOR_EQUIP_NETHERITE = register("item.armor.equip_netherite")
    @JvmField val ARMOR_EQUIP_TURTLE = register("item.armor.equip_turtle")
    @JvmField val ARMOR_STAND_BREAK = register("entity.armor_stand.break")
    @JvmField val ARMOR_STAND_FALL = register("entity.armor_stand.fall")
    @JvmField val ARMOR_STAND_HIT = register("entity.armor_stand.hit")
    @JvmField val ARMOR_STAND_PLACE = register("entity.armor_stand.place")
    @JvmField val ARROW_HIT = register("entity.arrow.hit")
    @JvmField val ARROW_HIT_PLAYER = register("entity.arrow.hit_player")
    @JvmField val ARROW_SHOOT = register("entity.arrow.shoot")
    @JvmField val AXE_STRIP = register("item.axe.strip")
    @JvmField val AXE_SCRAPE = register("item.axe.scrape")
    @JvmField val AXE_WAX_OFF = register("item.axe.wax_off")
    @JvmField val AXOLOTL_ATTACK = register("entity.axolotl.attack")
    @JvmField val AXOLOTL_DEATH = register("entity.axolotl.death")
    @JvmField val AXOLOTL_HURT = register("entity.axolotl.hurt")
    @JvmField val AXOLOTL_IDLE_AIR = register("entity.axolotl.idle_air")
    @JvmField val AXOLOTL_IDLE_WATER = register("entity.axolotl.idle_water")
    @JvmField val AXOLOTL_SPLASH = register("entity.axolotl.splash")
    @JvmField val AXOLOTL_SWIM = register("entity.axolotl.swim")
    @JvmField val AZALEA_BREAK = register("block.azalea.break")
    @JvmField val AZALEA_FALL = register("block.azalea.fall")
    @JvmField val AZALEA_HIT = register("block.azalea.hit")
    @JvmField val AZALEA_PLACE = register("block.azalea.place")
    @JvmField val AZALEA_STEP = register("block.azalea.step")
    @JvmField val AZALEA_LEAVES_BREAK = register("block.azalea_leaves.break")
    @JvmField val AZALEA_LEAVES_FALL = register("block.azalea_leaves.fall")
    @JvmField val AZALEA_LEAVES_HIT = register("block.azalea_leaves.hit")
    @JvmField val AZALEA_LEAVES_PLACE = register("block.azalea_leaves.place")
    @JvmField val AZALEA_LEAVES_STEP = register("block.azalea_leaves.tep")
    @JvmField val BAMBOO_BREAK = register("block.bamboo.break")
    @JvmField val BAMBOO_FALL = register("block.bamboo.fall")
    @JvmField val BAMBOO_HIT = register("block.bamboo.hit")
    @JvmField val BAMBOO_PLACE = register("block.bamboo.place")
    @JvmField val BAMBOO_STEP = register("block.bamboo.step")
    @JvmField val BAMBOO_SAPLING_BREAK = register("block.bamboo_sapling.break")
    @JvmField val BAMBOO_SAPLING_HIT = register("block.bamboo_sapling.hit")
    @JvmField val BAMBOO_SAPLING_PLACE = register("block.bamboo_sapling.place")
    @JvmField val BARREL_CLOSE = register("block.barrel.close")
    @JvmField val BARREL_OPEN = register("block.barrel.open")
    @JvmField val BASALT_BREAK = register("block.basalt.break")
    @JvmField val BASALT_STEP = register("block.basalt.step")
    @JvmField val BASALT_PLACE = register("block.basalt.place")
    @JvmField val BASALT_HIT = register("block.basalt.hit")
    @JvmField val BASALT_FALL = register("block.basalt.fall")
    @JvmField val BAT_AMBIENT = register("entity.bat.ambient")
    @JvmField val BAT_DEATH = register("entity.bat.death")
    @JvmField val BAT_HURT = register("entity.bat.hurt")
    @JvmField val BAT_LOOP = register("entity.bat.loop")
    @JvmField val BAT_TAKEOFF = register("entity.bat.takeoff")
    @JvmField val BEACON_ACTIVATE = register("block.beacon.activate")
    @JvmField val BEACON_AMBIENT = register("block.beacon.ambient")
    @JvmField val BEACON_DEACTIVATE = register("block.beacon.deactivate")
    @JvmField val BEACON_POWER_SELECT = register("block.beacon.power_select")
    @JvmField val BEE_DEATH = register("entity.bee.death")
    @JvmField val BEE_HURT = register("entity.bee.hurt")
    @JvmField val BEE_LOOP_AGGRESSIVE = register("entity.bee.loop_aggressive")
    @JvmField val BEE_LOOP = register("entity.bee.loop")
    @JvmField val BEE_STING = register("entity.bee.sting")
    @JvmField val BEE_POLLINATE = register("entity.bee.pollinate")
    @JvmField val BEEHIVE_DRIP = register("block.beehive.drip")
    @JvmField val BEEHIVE_ENTER = register("block.beehive.enter")
    @JvmField val BEEHIVE_EXIT = register("block.beehive.exit")
    @JvmField val BEEHIVE_SHEAR = register("block.beehive.shear")
    @JvmField val BEEHIVE_WORK = register("block.beehive.work")
    @JvmField val BELL_USE = register("block.bell.use")
    @JvmField val BELL_RESONATE = register("block.bell.resonate")
    @JvmField val BIG_DRIPLEAF_BREAK = register("block.big_dripleaf.break")
    @JvmField val BIG_DRIPLEAF_FALL = register("block.big_dripleaf.fall")
    @JvmField val BIG_DRIPLEAF_HIT = register("block.big_dripleaf.hit")
    @JvmField val BIG_DRIPLEAF_PLACE = register("block.big_dripleaf.place")
    @JvmField val BIG_DRIPLEAF_STEP = register("block.big_dripleaf.step")
    @JvmField val BLAZE_AMBIENT = register("entity.blaze.ambient")
    @JvmField val BLAZE_BURN = register("entity.blaze.burn")
    @JvmField val BLAZE_DEATH = register("entity.blaze.death")
    @JvmField val BLAZE_HURT = register("entity.blaze.hurt")
    @JvmField val BLAZE_SHOOT = register("entity.blaze.shoot")
    @JvmField val BOAT_PADDLE_LAND = register("entity.boat.paddle_land")
    @JvmField val BOAT_PADDLE_WATER = register("entity.boat.paddle_water")
    @JvmField val BONE_BLOCK_BREAK = register("block.bone_block.break")
    @JvmField val BONE_BLOCK_FALL = register("block.bone_block.fall")
    @JvmField val BONE_BLOCK_HIT = register("block.bone_block.hit")
    @JvmField val BONE_BLOCK_PLACE = register("block.bone_block.place")
    @JvmField val BONE_BLOCK_STEP = register("block.bone_block.step")
    @JvmField val BONE_MEAL_USE = register("item.bone_meal.use")
    @JvmField val BOOK_PAGE_TURN = register("item.book.page_turn")
    @JvmField val BOOK_PUT = register("item.book.put")
    @JvmField val BLAST_FURNACE_FIRE_CRACKLE = register("block.blastfurnace.fire_crackle")
    @JvmField val BOTTLE_EMPTY = register("item.bottle.empty")
    @JvmField val BOTTLE_FILL = register("item.bottle.fill")
    @JvmField val BOTTLE_FILL_DRAGON_BREATH = register("item.bottle.fill_dragonbreath")
    @JvmField val BREWING_STAND_BREW = register("block.brewing_stand.brew")
    @JvmField val BUBBLE_COLUMN_BUBBLE_POP = register("block.bubble_column.bubble_pop")
    @JvmField val BUBBLE_COLUMN_UPWARDS_AMBIENT = register("block.bubble_column.upwards_ambient")
    @JvmField val BUBBLE_COLUMN_UPWARDS_INSIDE = register("block.bubble_column.upwards_inside")
    @JvmField val BUBBLE_COLUMN_WHIRLPOOL_AMBIENT = register("block.bubble_column.whirlpool_ambient")
    @JvmField val BUBBLE_COLUMN_WHIRLPOOL_INSIDE = register("block.bubble_column.whirlpool_inside")
    @JvmField val BUCKET_EMPTY = register("item.bucket.empty")
    @JvmField val BUCKET_EMPTY_AXOLOTL = register("item.bucket.empty_axolotl")
    @JvmField val BUCKET_EMPTY_FISH = register("item.bucket.empty_fish")
    @JvmField val BUCKET_EMPTY_LAVA = register("item.bucket.empty_lava")
    @JvmField val BUCKET_EMPTY_POWDER_SNOW = register("item.bucket.empty_powder_snow")
    @JvmField val BUCKET_FILL = register("item.bucket.fill")
    @JvmField val BUCKET_FILL_AXOLOTL = register("item.bucket.fill_axolotl")
    @JvmField val BUCKET_FILL_FISH = register("item.bucket.fill_fish")
    @JvmField val BUCKET_FILL_LAVA = register("item.bucket.fill_lava")
    @JvmField val BUCKET_FILL_POWDER_SNOW = register("item.bucket.fill_powder_snow")
    @JvmField val CAKE_ADD_CANDLE = register("block.cake.add_candle")
    @JvmField val CALCITE_BREAK = register("block.calcite.break")
    @JvmField val CALCITE_STEP = register("block.calcite.step")
    @JvmField val CALCITE_PLACE = register("block.calcite.place")
    @JvmField val CALCITE_HIT = register("block.calcite.hit")
    @JvmField val CALCITE_FALL = register("block.calcite.fall")
    @JvmField val CAMPFIRE_CRACKLE = register("block.campfire.crackle")
    @JvmField val CANDLE_AMBIENT = register("block.candle.ambient")
    @JvmField val CANDLE_BREAK = register("block.candle.break")
    @JvmField val CANDLE_EXTINGUISH = register("block.candle.extinguish")
    @JvmField val CANDLE_FALL = register("block.candle.fall")
    @JvmField val CANDLE_HIT = register("block.candle.hit")
    @JvmField val CANDLE_PLACE = register("block.candle.place")
    @JvmField val CANDLE_STEP = register("block.candle.step")
    @JvmField val CAT_AMBIENT = register("entity.cat.ambient")
    @JvmField val CAT_STRAY_AMBIENT = register("entity.cat.stray_ambient")
    @JvmField val CAT_DEATH = register("entity.cat.death")
    @JvmField val CAT_EAT = register("entity.cat.eat")
    @JvmField val CAT_HISS = register("entity.cat.hiss")
    @JvmField val CAT_BEG_FOR_FOOD = register("entity.cat.beg_for_food")
    @JvmField val CAT_HURT = register("entity.cat.hurt")
    @JvmField val CAT_PURR = register("entity.cat.purr")
    @JvmField val CAT_PURREOW = register("entity.cat.purreow")
    @JvmField val CAVE_VINES_BREAK = register("block.cave_vines.break")
    @JvmField val CAVE_VINES_FALL = register("block.cave_vines.fall")
    @JvmField val CAVE_VINES_HIT = register("block.cave_vines.hit")
    @JvmField val CAVE_VINES_PLACE = register("block.cave_vines.place")
    @JvmField val CAVE_VINES_STEP = register("block.cave_vines.step")
    @JvmField val CAVE_VINES_PICK_BERRIES = register("block.cave_vines.pick_berries")
    @JvmField val CHAIN_BREAK = register("block.chain.break")
    @JvmField val CHAIN_FALL = register("block.chain.fall")
    @JvmField val CHAIN_HIT = register("block.chain.hit")
    @JvmField val CHAIN_PLACE = register("block.chain.place")
    @JvmField val CHAIN_STEP = register("block.chain.step")
    @JvmField val CHEST_CLOSE = register("block.chest.close")
    @JvmField val CHEST_LOCKED = register("block.chest.locked")
    @JvmField val CHEST_OPEN = register("block.chest.open")
    @JvmField val CHICKEN_AMBIENT = register("entity.chicken.ambient")
    @JvmField val CHICKEN_DEATH = register("entity.chicken.death")
    @JvmField val CHICKEN_EGG = register("entity.chicken.egg")
    @JvmField val CHICKEN_HURT = register("entity.chicken.hurt")
    @JvmField val CHICKEN_STEP = register("entity.chicken.step")
    @JvmField val CHORUS_FLOWER_DEATH = register("block.chorus_flower.death")
    @JvmField val CHORUS_FLOWER_GROW = register("block.chorus_flower.grow")
    @JvmField val CHORUS_FRUIT_TELEPORT = register("item.chorus_fruit.teleport")
    @JvmField val COD_AMBIENT = register("entity.cod.ambient")
    @JvmField val COD_DEATH = register("entity.cod.death")
    @JvmField val COD_FLOP = register("entity.cod.flop")
    @JvmField val COD_HURT = register("entyt.cod.hurt")
    @JvmField val COMPARATOR_CLICK = register("block.comparator.click")
    @JvmField val COMPOSTER_EMPTY = register("block.composter.empty")
    @JvmField val COMPOSTER_FILL = register("block.composter.fill")
    @JvmField val COMPOSTER_FILL_SUCCESS = register("block.composter.fill_success")
    @JvmField val COMPOSTER_READY = register("block.composter.ready")
    @JvmField val CONDUIT_ACTIVATE = register("block.conduit.activate")
    @JvmField val CONDUIT_AMBIENT = register("block.conduit.ambient")
    @JvmField val CONDUIT_AMBIENT_SHORT = register("block.conduit.ambient.short")
    @JvmField val CONDUIT_ATTACK_TARGET = register("block.conduit.attack.target")
    @JvmField val CONDUIT_DEACTIVATE = register("block.conduit.deactivate")
    @JvmField val COPPER_BREAK = register("block.copper.break")
    @JvmField val COPPER_STEP = register("block.copper.step")
    @JvmField val COPPER_PLACE = register("block.copper.place")
    @JvmField val COPPER_HIT = register("block.copper.hit")
    @JvmField val COPPER_FALL = register("block.copper.fall")
    @JvmField val CORAL_BLOCK_BREAK = register("block.coral_block.break")
    @JvmField val CORAL_BLOCK_FALL = register("block.coral_block.fall")
    @JvmField val CORAL_BLOCK_HIT = register("block.coral_block.hit")
    @JvmField val CORAL_BLOCK_PLACE = register("block.coral_block.place")
    @JvmField val CORAL_BLOCK_STEP = register("block.coral_block.step")
    @JvmField val COW_AMBIENT = register("entity.cow.ambient")
    @JvmField val COW_DEATH = register("entity.cow.death")
    @JvmField val COW_HURT = register("entity.cow.hurt")
    @JvmField val COW_MILK = register("entity.cow.milk")
    @JvmField val COW_STEP = register("entity.cow.step")
    @JvmField val CREEPER_DEATH = register("entity.creeper.death")
    @JvmField val CREEPER_HURT = register("entity.creeper.hurt")
    @JvmField val CREEPER_PRIMED = register("entity.creeper.primed")
    @JvmField val CROP_BREAK = register("block.crop.break")
    @JvmField val CROP_PLANT = register("item.crop.plant")
    @JvmField val CROSSBOW_HIT = register("item.crossbow.hit")
    @JvmField val CROSSBOW_LOADING_END = register("item.crossbow.loading_end")
    @JvmField val CROSSBOW_LOADING_MIDDLE = register("item.crossbow.loading_middle")
    @JvmField val CROSSBOW_LOADING_START = register("item.crossbow.loading_start")
    @JvmField val CROSSBOW_QUICK_CHARGE_1 = register("item.crossbow.quick_charge_1")
    @JvmField val CROSSBOW_QUICK_CHARGE_2 = register("item.crossbow.quick_charge_2")
    @JvmField val CROSSBOW_QUICK_CHARGE_3 = register("item.crossbow.quick_charge_3")
    @JvmField val CROSSBOW_SHOOT = register("item.crossbow.shoot")
    @JvmField val DEEPSLATE_BRICKS_BREAK = register("block.deepslate_bricks.break")
    @JvmField val DEEPSLATE_BRICKS_FALL = register("block.deepslate_bricks.fall")
    @JvmField val DEEPSLATE_BRICKS_HIT = register("block.deepslate_bricks.hit")
    @JvmField val DEEPSLATE_BRICKS_PLACE = register("block.deepslate_bricks.place")
    @JvmField val DEEPSLATE_BRICKS_STEP = register("block.deepslate_bricks.step")
    @JvmField val DEEPSLATE_BREAK = register("block.deepslate.break")
    @JvmField val DEEPSLATE_FALL = register("block.deepslate.fall")
    @JvmField val DEEPSLATE_HIT = register("block.deepslate.hit")
    @JvmField val DEEPSLATE_PLACE = register("block.deepslate.place")
    @JvmField val DEEPSLATE_STEP = register("block.deepslate.step")
    @JvmField val DEEPSLATE_TILES_BREAK = register("block.deepslate_tiles.break")
    @JvmField val DEEPSLATE_TILES_FALL = register("block.deepslate_tiles.fall")
    @JvmField val DEEPSLATE_TILES_HIT = register("block.deepslate_tiles.hit")
    @JvmField val DEEPSLATE_TILES_PLACE = register("block.deepslate_tiles.place")
    @JvmField val DEEPSLATE_TILES_STEP = register("block.deepslate_tiles.step")
    @JvmField val DISPENSER_DISPENSE = register("block.dispenser.dispense")
    @JvmField val DISPENSER_FAIL = register("block.dispenser.fail")
    @JvmField val DISPENSER_LAUNCH = register("block.dispenser.launch")
    @JvmField val DOLPHIN_AMBIENT = register("entity.dolphin.ambient")
    @JvmField val DOLPHIN_AMBIENT_WATER = register("entity.dolphin.ambient_water")
    @JvmField val DOLPHIN_ATTACK = register("entity.dolphin.attack")
    @JvmField val DOLPHIN_DEATH = register("entity.dolphin.death")
    @JvmField val DOLPHIN_EAT = register("entity.dolphin.eat")
    @JvmField val DOLPHIN_HURT = register("entity.dolphin.hurt")
    @JvmField val DOLPHIN_JUMP = register("entity.dolphin.jump")
    @JvmField val DOLPHIN_PLAY = register("entity.dolphin.play")
    @JvmField val DOLPHIN_SPLASH = register("entity.dolphin.splash")
    @JvmField val DOLPHIN_SWIM = register("entity.dolphin.swim")
    @JvmField val DONKEY_AMBIENT = register("entity.donkey.ambient")
    @JvmField val DONKEY_ANGRY = register("entity.donkey.angry")
    @JvmField val DONKEY_CHEST = register("entity.donkey.chest")
    @JvmField val DONKEY_DEATH = register("entity.donkey.death")
    @JvmField val DONKEY_EAT = register("entity.donkey.eat")
    @JvmField val DONKEY_HURT = register("entity.donkey.hurt")
    @JvmField val DRIPSTONE_BLOCK_BREAK = register("block.dripstone_block.break")
    @JvmField val DRIPSTONE_BLOCK_STEP = register("block.dripstone_block.step")
    @JvmField val DRIPSTONE_BLOCK_PLACE = register("block.dripstone_block.place")
    @JvmField val DRIPSTONE_BLOCK_HIT = register("block.dripstone_block.hit")
    @JvmField val DRIPSTONE_BLOCK_FALL = register("block.dripstone_block.fall")
    @JvmField val POINTED_DRIPSTONE_BREAK = register("block.pointed_dripstone.break")
    @JvmField val POINTED_DRIPSTONE_STEP = register("block.pointed_dripstone.step")
    @JvmField val POINTED_DRIPSTONE_PLACE = register("block.pointed_dripstone.place")
    @JvmField val POINTED_DRIPSTONE_HIT = register("block.pointed_dripstone.hit")
    @JvmField val POINTED_DRIPSTONE_FALL = register("block.pointed_dripstone.fall")
    @JvmField val POINTED_DRIPSTONE_LAND = register("block.pointed_dripstone.land")
    @JvmField val POINTED_DRIPSTONE_DRIP_LAVA = register("block.pointed_dripstone.drip_lava")
    @JvmField val POINTED_DRIPSTONE_DRIP_WATER = register("block.pointed_dripstone.drip_water")
    @JvmField val POINTED_DRIPSTONE_DRIP_LAVA_INTO_CAULDRON = register("block.pointed_dripstone.drip_lava_into_cauldron")
    @JvmField val POINTED_DRIPSTONE_DRIP_WATER_INTO_CAULDRON = register("block.pointed_dripstone.drip_water_into_cauldron")
    @JvmField val BIG_DRIPLEAF_TILT_DOWN = register("block.big_dripleaf.tilt_down")
    @JvmField val BIG_DRIPLEAF_TILT_UP = register("block.big_dripleaf.tilt_up")
    @JvmField val DROWNED_AMBIENT = register("entity.drowned.ambient")
    @JvmField val DROWNED_AMBIENT_WATER = register("entity.drowned.ambient_water")
    @JvmField val DROWNED_DEATH = register("entity.drowned.death")
    @JvmField val DROWNED_DEATH_WATER = register("entity.drowned.death_water")
    @JvmField val DROWNED_HURT = register("entity.drowned.hurt")
    @JvmField val DROWNED_HURT_WATER = register("entity.drowned.hurt_water")
    @JvmField val DROWNED_SHOOT = register("entity.drowned.shoot")
    @JvmField val DROWNED_STEP = register("entity.drowned.step")
    @JvmField val DROWNED_SWIM = register("entity.drowned.swim")
    @JvmField val DYE_USE = register("item.dye.use")
    @JvmField val EGG_THROW = register("entity.egg.throw")
    @JvmField val ELDER_GUARDIAN_AMBIENT = register("entity.elder_guardian.ambient")
    @JvmField val ELDER_GUARDIAN_AMBIENT_LAND = register("entity.elder_guardian.ambient_land")
    @JvmField val ELDER_GUARDIAN_CURSE = register("entity.elder_guardian.curse")
    @JvmField val ELDER_GUARDIAN_DEATH = register("entity.elder_guardian.death")
    @JvmField val ELDER_GUARDIAN_DEATH_LAND = register("entity.elder_guardian.death_land")
    @JvmField val ELDER_GUARDIAN_FLOP = register("entity.elder_guardian.flop")
    @JvmField val ELDER_GUARDIAN_HURT = register("entity.elder_guardian.hurt")
    @JvmField val ELDER_GUARDIAN_HURT_LAND = register("entity.elder_guardian.hurt_land")
    @JvmField val ELYTRA_FLYING = register("item.elytra.flying")
    @JvmField val ENCHANTMENT_TABLE_USE = register("block.enchantment_table.use")
    @JvmField val ENDER_CHEST_CLOSE = register("block.ender_chest.close")
    @JvmField val ENDER_CHEST_OPEN = register("block.ender_chest.open")
    @JvmField val ENDER_DRAGON_AMBIENT = register("entity.ender_dragon.ambient")
    @JvmField val ENDER_DRAGON_DEATH = register("entity.ender_dragon.death")
    @JvmField val DRAGON_FIREBALL_EXPLODE = register("entity.dragon_fireball.explode")
    @JvmField val ENDER_DRAGON_FLAP = register("entity.ender_dragon.flap")
    @JvmField val ENDER_DRAGON_GROWL = register("entity.ender_dragon.growl")
    @JvmField val ENDER_DRAGON_HURT = register("entity.ender_dragon.hurt")
    @JvmField val ENDER_DRAGON_SHOOT = register("entity.ender_dragon.shoot")
    @JvmField val ENDER_EYE_DEATH = register("entity.ender_eye.death")
    @JvmField val ENDER_EYE_LAUNCH = register("entity.ender_eye.launch")
    @JvmField val ENDERMAN_AMBIENT = register("entity.enderman.ambient")
    @JvmField val ENDERMAN_DEATH = register("entity.enderman.death")
    @JvmField val ENDERMAN_HURT = register("entity.enderman.hurt")
    @JvmField val ENDERMAN_SCREAM = register("entity.enderman.scream")
    @JvmField val ENDERMAN_STARE = register("entity.enderman.stare")
    @JvmField val ENDERMAN_TELEPORT = register("entity.enderman.teleport")
    @JvmField val ENDERMITE_AMBIENT = register("entity.endermite.ambient")
    @JvmField val ENDERMITE_DEATH = register("entity.endermite.death")
    @JvmField val ENDERMITE_HURT = register("entity.endermite.hurt")
    @JvmField val ENDERMITE_STEP = register("entity.endermite.step")
    @JvmField val ENDER_PEARL_THROW = register("entity.ender_pearl.throw")
    @JvmField val END_GATEWAY_SPAWN = register("block.end_gateway.spawn")
    @JvmField val END_PORTAL_FRAME_FILL = register("block.end_portal_frame.fill")
    @JvmField val END_PORTAL_SPAWN = register("block.end_portal.spawn")
    @JvmField val EVOKER_AMBIENT = register("entity.evoker.ambient")
    @JvmField val EVOKER_CAST_SPELL = register("entity.evoker.cast_spell")
    @JvmField val EVOKER_CELEBRATE = register("entity.evoker.celebrate")
    @JvmField val EVOKER_DEATH = register("entity.evoker.death")
    @JvmField val EVOKER_FANGS_ATTACK = register("entity.evoker_fangs.attack")
    @JvmField val EVOKER_HURT = register("entity.evoker.hurt")
    @JvmField val EVOKER_PREPARE_ATTACK = register("entity.evoker.prepare_attack")
    @JvmField val EVOKER_PREPARE_SUMMON = register("entity.evoker.prepare_summon")
    @JvmField val EVOKER_PREPARE_WOLOLO = register("entity.evoker.prepare_wololo")
    @JvmField val EXPERIENCE_BOTTLE_THROW = register("entity.experience_bottle.throw")
    @JvmField val EXPERIENCE_ORB_PICKUP = register("entity.experience_orb.pickup")
    @JvmField val FENCE_GATE_CLOSE = register("block.fence_gate.close")
    @JvmField val FENCE_GATE_OPEN = register("block.fence_gate.open")
    @JvmField val FIRE_CHARGE_USE = register("item.firecharge.use")
    @JvmField val FIREWORK_ROCKET_BLAST = register("entity.firework_rocket.blast")
    @JvmField val FIREWORK_ROCKET_BLAST_FAR = register("entity.firework_rocket.blast_far")
    @JvmField val FIREWORK_ROCKET_LARGE_BLAST = register("entity.firework_rocket.large_blast")
    @JvmField val FIREWORK_ROCKET_LARGE_BLAST_FAR = register("entity.firework_rocket.large_blast_far")
    @JvmField val FIREWORK_ROCKET_LAUNCH = register("entity.firework_rocket.launch")
    @JvmField val FIREWORK_ROCKET_SHOOT = register("entity.firework_rocket.shoot")
    @JvmField val FIREWORK_ROCKET_TWINKLE = register("entity.firework_rocket.twinkle")
    @JvmField val FIREWORK_ROCKET_TWINKLE_FAR = register("entity.firework_rocket.twinkle_far")
    @JvmField val FIRE_AMBIENT = register("block.fire.ambient")
    @JvmField val FIRE_EXTINGUISH = register("block.fire.extinguish")
    @JvmField val FISH_SWIM = register("entity.fish.swim")
    @JvmField val FISHING_BOBBER_RETRIEVE = register("entity.fishing_bobber.retrieve")
    @JvmField val FISHING_BOBBER_SPLASH = register("entity.fishing_bobber.splash")
    @JvmField val FISHING_BOBBER_THROW = register("entity.fishing_bobber.throw")
    @JvmField val FLINT_AND_STEEL_USE = register("item.flintandsteel.use")
    @JvmField val FLOWERING_AZALEA_BREAK = register("block.flowering_azalea.break")
    @JvmField val FLOWERING_AZALEA_FALL = register("block.flowering_azalea.fall")
    @JvmField val FLOWERING_AZALEA_HIT = register("block.flowering_azalea.hit")
    @JvmField val FLOWERING_AZALEA_PLACE = register("block.flowering_azalea.place")
    @JvmField val FLOWERING_AZALEA_STEP = register("block.flowering_azalea.step")
    @JvmField val FOX_AGGRO = register("entity.fox.aggro")
    @JvmField val FOX_AMBIENT = register("entity.fox.ambient")
    @JvmField val FOX_BITE = register("entity.fox.bite")
    @JvmField val FOX_DEATH = register("entity.fox.death")
    @JvmField val FOX_EAT = register("entity.fox.eat")
    @JvmField val FOX_HURT = register("entity.fox.hurt")
    @JvmField val FOX_SCREECH = register("entity.fox.screech")
    @JvmField val FOX_SLEEP = register("entity.fox.sleep")
    @JvmField val FOX_SNIFF = register("entity.fox.sniff")
    @JvmField val FOX_SPIT = register("entity.fox.spit")
    @JvmField val FOX_TELEPORT = register("entity.fox.teleport")
    @JvmField val ROOTS_BREAK = register("block.roots.break")
    @JvmField val ROOTS_STEP = register("block.roots.step")
    @JvmField val ROOTS_PLACE = register("block.roots.place")
    @JvmField val ROOTS_HIT = register("block.roots.hit")
    @JvmField val ROOTS_FALL = register("block.roots.fall")
    @JvmField val FURNACE_FIRE_CRACKLE = register("block.furnace.fire_crackle")
    @JvmField val GENERIC_BIG_FALL = register("entity.generic.big_fall")
    @JvmField val GENERIC_BURN = register("entity.generic.burn")
    @JvmField val GENERIC_DEATH = register("entity.generic.death")
    @JvmField val GENERIC_DRINK = register("entity.generic.drink")
    @JvmField val GENERIC_EAT = register("entity.generic.eat")
    @JvmField val GENERIC_EXPLODE = register("entity.generic.explode")
    @JvmField val GENERIC_EXTINGUISH_FIRE = register("entity.generic.extinguish_fire")
    @JvmField val GENERIC_HURT = register("entity.generic.hurt")
    @JvmField val GENERIC_SMALL_FALL = register("entity.generic.small_fall")
    @JvmField val GENERIC_SPLASH = register("entity.generic.splash")
    @JvmField val GENERIC_SWIM = register("entity.generic.swim")
    @JvmField val GHAST_AMBIENT = register("entity.ghast.ambient")
    @JvmField val GHAST_DEATH = register("entity.ghast.death")
    @JvmField val GHAST_HURT = register("entity.ghast.hurt")
    @JvmField val GHAST_SCREAM = register("entity.ghast.scream")
    @JvmField val GHAST_SHOOT = register("entity.ghast.shoot")
    @JvmField val GHAST_WARN = register("entity.ghast.warn")
    @JvmField val GILDED_BLACKSTONE_BREAK = register("block.gilded_blackstone.break")
    @JvmField val GILDED_BLACKSTONE_FALL = register("block.gilded_blackstone.fall")
    @JvmField val GILDED_BLACKSTONE_HIT = register("block.gilded_blackstone.hit")
    @JvmField val GILDED_BLACKSTONE_PLACE = register("block.gilded_blackstone.place")
    @JvmField val GILDED_BLACKSTONE_STEP = register("block.gilded_blackstone.step")
    @JvmField val GLASS_BREAK = register("block.glass.break")
    @JvmField val GLASS_FALL = register("block.glass.fall")
    @JvmField val GLASS_HIT = register("block.glass.hit")
    @JvmField val GLASS_PLACE = register("block.glass.place")
    @JvmField val GLASS_STEP = register("block.glass.step")
    @JvmField val GLOW_INK_SAC_USE = register("item.glow_ink_sac.use")
    @JvmField val GLOW_ITEM_FRAME_ADD_ITEM = register("entity.glow_item_frame.add_item")
    @JvmField val GLOW_ITEM_FRAME_BREAK = register("entity.glow_item_frame.break")
    @JvmField val GLOW_ITEM_FRAME_PLACE = register("entity.glow_item_frame.place")
    @JvmField val GLOW_ITEM_FRAME_REMOVE_ITEM = register("entity.glow_item_frame.remove_item")
    @JvmField val GLOW_ITEM_FRAME_ROTATE_ITEM = register("entity.glow_item_frame.rotate_item")
    @JvmField val GLOW_SQUID_AMBIENT = register("entity.glow_squid.ambient")
    @JvmField val GLOW_SQUID_DEATH = register("entity.glow_squid.death")
    @JvmField val GLOW_SQUID_HURT = register("entity.glow_squid.hurt")
    @JvmField val GLOW_SQUID_SQUIRT = register("entity.glow_squid.squirt")
    @JvmField val GOAT_AMBIENT = register("entity.goat.ambient")
    @JvmField val GOAT_DEATH = register("entity.goat.death")
    @JvmField val GOAT_EAT = register("entity.goat.eat")
    @JvmField val GOAT_HURT = register("entity.goat.hurt")
    @JvmField val GOAT_LONG_JUMP = register("entity.goat.long_jump")
    @JvmField val GOAT_MILK = register("entity.goat.milk")
    @JvmField val GOAT_PREPARE_RAM = register("entity.goat.prepare_ram")
    @JvmField val GOAT_RAM_IMPACT = register("entity.goat.ram_impact")
    @JvmField val GOAT_SCREAMING_AMBIENT = register("entity.goat.screaming.ambient")
    @JvmField val GOAT_SCREAMING_DEATH = register("entity.goat.screaming.death")
    @JvmField val GOAT_SCREAMING_EAT = register("entity.goat.screaming.eat")
    @JvmField val GOAT_SCREAMING_HURT = register("entity.goat.screaming.hurt")
    @JvmField val GOAT_SCREAMING_LONG_JUMP = register("entity.goat.screaming.long_jump")
    @JvmField val GOAT_SCREAMING_MILK = register("entity.goat.screaming.milk")
    @JvmField val GOAT_SCREAMING_PREPARE_RAM = register("entity.goat.screaming.prepare_ram")
    @JvmField val GOAT_SCREAMING_RAM_IMPACT = register("entity.goat.screaming.ram_impact")
    @JvmField val GOAT_STEP = register("entity.goat.step")
    @JvmField val GRASS_BREAK = register("block.grass.break")
    @JvmField val GRASS_FALL = register("block.grass.fall")
    @JvmField val GRASS_HIT = register("block.grass.hit")
    @JvmField val GRASS_PLACE = register("block.grass.place")
    @JvmField val GRASS_STEP = register("block.grass.step")
    @JvmField val GRAVEL_BREAK = register("block.gravel.break")
    @JvmField val GRAVEL_FALL = register("block.gravel.fall")
    @JvmField val GRAVEL_HIT = register("block.gravel.hit")
    @JvmField val GRAVEL_PLACE = register("block.gravel.place")
    @JvmField val GRAVEL_STEP = register("block.gravel.step")
    @JvmField val GRINDSTONE_USE = register("block.grindstone.use")
    @JvmField val GUARDIAN_AMBIENT = register("entity.guardian.ambient")
    @JvmField val GUARDIAN_AMBIENT_LAND = register("entity.guardian.ambient_land")
    @JvmField val GUARDIAN_ATTACK = register("entity.guardian.attack")
    @JvmField val GUARDIAN_DEATH = register("entity.guardian.death")
    @JvmField val GUARDIAN_DEATH_LAND = register("entity.guardian.death_land")
    @JvmField val GUARDIAN_FLOP = register("entity.guardian.flop")
    @JvmField val GUARDIAN_HURT = register("entity.guardian.hurt")
    @JvmField val GUARDIAN_HURT_LAND = register("entity.guardian.hurt_land")
    @JvmField val HANGING_ROOTS_BREAK = register("block.hanging_roots.break")
    @JvmField val HANGING_ROOTS_FALL = register("block.hanging_roots.fall")
    @JvmField val HANGING_ROOTS_HIT = register("block.hanging_roots.hit")
    @JvmField val HANGING_ROOTS_PLACE = register("block.hanging_roots.place")
    @JvmField val HANGING_ROOTS_STEP = register("block.hanging_roots.step")
    @JvmField val HOE_TILL = register("item.hoe.till")
    @JvmField val HOGLIN_AMBIENT = register("entity.hoglin.ambient")
    @JvmField val HOGLIN_ANGRY = register("entity.hoglin.angry")
    @JvmField val HOGLIN_ATTACK = register("entity.hoglin.attack")
    @JvmField val HOGLIN_CONVERTED_TO_ZOMBIFIED = register("entity.hoglin.converted_to_zombified")
    @JvmField val HOGLIN_DEATH = register("entity.hoglin.death")
    @JvmField val HOGLIN_HURT = register("entity.hoglin.hurt")
    @JvmField val HOGLIN_RETREAT = register("entity.hoglin.retreat")
    @JvmField val HOGLIN_STEP = register("entity.hoglin.step")
    @JvmField val HONEY_BLOCK_BREAK = register("block.honey_block.break")
    @JvmField val HONEY_BLOCK_FALL = register("block.honey_block.fall")
    @JvmField val HONEY_BLOCK_HIT = register("block.honey_block.hit")
    @JvmField val HONEY_BLOCK_PLACE = register("block.honey_block.place")
    @JvmField val HONEY_BLOCK_SLIDE = register("block.honey_block.slide")
    @JvmField val HONEY_BLOCK_STEP = register("block.honey_block.step")
    @JvmField val HONEYCOMB_WAX_ON = register("item.honeycomb.wax_on")
    @JvmField val HONEY_DRINK = register("item.honey_bottle.drink")
    @JvmField val HORSE_AMBIENT = register("entity.horse.ambient")
    @JvmField val HORSE_ANGRY = register("entity.horse.angry")
    @JvmField val HORSE_ARMOR = register("entity.horse.armor")
    @JvmField val HORSE_BREATHE = register("entity.horse.breathe")
    @JvmField val HORSE_DEATH = register("entity.horse.death")
    @JvmField val HORSE_EAT = register("entity.horse.eat")
    @JvmField val HORSE_GALLOP = register("entity.horse.gallop")
    @JvmField val HORSE_HURT = register("entity.horse.hurt")
    @JvmField val HORSE_JUMP = register("entity.horse.jump")
    @JvmField val HORSE_LAND = register("entity.horse.land")
    @JvmField val HORSE_SADDLE = register("entity.horse.saddle")
    @JvmField val HORSE_STEP = register("entity.horse.step")
    @JvmField val HORSE_STEP_WOOD = register("entity.horse.step_wood")
    @JvmField val HOSTILE_BIG_FALL = register("entity.hostile.big_fall")
    @JvmField val HOSTILE_DEATH = register("entity.hostile.death")
    @JvmField val HOSTILE_HURT = register("entity.hostile.hurt")
    @JvmField val HOSTILE_SMALL_FALL = register("entity.hostile.small_fall")
    @JvmField val HOSTILE_SPLASH = register("entity.hostile.splash")
    @JvmField val HOSTILE_SWIM = register("entity.hostile.swim")
    @JvmField val HUSK_AMBIENT = register("entity.husk.ambient")
    @JvmField val HUSK_CONVERTED_TO_ZOMBIE = register("entity.husk.converted_to_zombie")
    @JvmField val HUSK_DEATH = register("entity.husk.death")
    @JvmField val HUSK_HURT = register("entity.husk.hurt")
    @JvmField val HUSK_STEP = register("entity.husk.step")
    @JvmField val ILLUSIONER_AMBIENT = register("entity.illusioner.ambient")
    @JvmField val ILLUSIONER_CAST_SPELL = register("entity.illusioner.cast_spell")
    @JvmField val ILLUSIONER_DEATH = register("entity.illusioner.death")
    @JvmField val ILLUSIONER_HURT = register("entity.illusioner.hurt")
    @JvmField val ILLUSIONER_MIRROR_MOVE = register("entity.illusioner.mirror_move")
    @JvmField val ILLUSIONER_PREPARE_BLINDNESS = register("entity.illusioner.prepare_blindness")
    @JvmField val ILLUSIONER_PREPARE_MIRROR = register("entity.illusioner.prepare_mirror")
    @JvmField val INK_SAC_USE = register("item.ink_sac.use")
    @JvmField val IRON_DOOR_CLOSE = register("block.iron_door.close")
    @JvmField val IRON_DOOR_OPEN = register("block.iron_door.open")
    @JvmField val IRON_GOLEM_ATTACK = register("entity.iron_golem.attack")
    @JvmField val IRON_GOLEM_DAMAGE = register("entity.iron_golem.damage")
    @JvmField val IRON_GOLEM_DEATH = register("entity.iron_golem.death")
    @JvmField val IRON_GOLEM_HURT = register("entity.iron_golem.hurt")
    @JvmField val IRON_GOLEM_REPAIR = register("entity.iron_golem.repair")
    @JvmField val IRON_GOLEM_STEP = register("entity.iron_golem.step")
    @JvmField val IRON_TRAPDOOR_CLOSE = register("block.iron_trapdoor.close")
    @JvmField val IRON_TRAPDOOR_OPEN = register("block.iron_trapdoor.open")
    @JvmField val ITEM_FRAME_ADD_ITEM = register("entity.item_frame.add_item")
    @JvmField val ITEM_FRAME_BREAK = register("entity.item_frame.break")
    @JvmField val ITEM_FRAME_PLACE = register("entity.item_frame.place")
    @JvmField val ITEM_FRAME_REMOVE_ITEM = register("entity.item_frame.remove_item")
    @JvmField val ITEM_FRAME_ROTATE_ITEM = register("entity.item_frame.rotate_item")
    @JvmField val ITEM_BREAK = register("entity.item.break")
    @JvmField val ITEM_PICKUP = register("entity.item.pickup")
    @JvmField val LADDER_BREAK = register("block.ladder.break")
    @JvmField val LADDER_FALL = register("block.ladder.fall")
    @JvmField val LADDER_HIT = register("block.ladder.hit")
    @JvmField val LADDER_PLACE = register("block.ladder.place")
    @JvmField val LADDER_STEP = register("block.ladder.step")
    @JvmField val LANTERN_BREAK = register("block.lantern.break")
    @JvmField val LANTERN_FALL = register("block.lantern.fall")
    @JvmField val LANTERN_HIT = register("block.lantern.hit")
    @JvmField val LANTERN_PLACE = register("block.lantern.place")
    @JvmField val LANTERN_STEP = register("block.lantern.step")
    @JvmField val LARGE_AMETHYST_BUD_BREAK = register("block.large_amethyst_bud.break")
    @JvmField val LARGE_AMETHYST_BUD_PLACE = register("block.large_amethyst_bud.place")
    @JvmField val LAVA_AMBIENT = register("block.lava.ambient")
    @JvmField val LAVA_EXTINGUISH = register("block.lava.extinguish")
    @JvmField val LAVA_POP = register("block.lava.pop")
    @JvmField val LEASH_KNOT_BREAK = register("entity.leash_knot.break")
    @JvmField val LEASH_KNOT_PLACE = register("entity.leash_knot.place")
    @JvmField val LEVER_CLICK = register("block.lever.click")
    @JvmField val LIGHTNING_BOLT_IMPACT = register("entity.lightning_bolt.impact")
    @JvmField val LIGHTNING_BOLT_THUNDER = register("entity.lightning_bolt.thunder")
    @JvmField val LINGERING_POTION_THROW = register("entity.lingering_potion.throw")
    @JvmField val LLAMA_AMBIENT = register("entity.llama.ambient")
    @JvmField val LLAMA_ANGRY = register("entity.llama.angry")
    @JvmField val LLAMA_CHEST = register("entity.llama.chest")
    @JvmField val LLAMA_DEATH = register("entity.llama.death")
    @JvmField val LLAMA_EAT = register("entity.llama.eat")
    @JvmField val LLAMA_HURT = register("entity.llama.hurt")
    @JvmField val LLAMA_SPIT = register("entity.llama.spit")
    @JvmField val LLAMA_STEP = register("entity.llama.step")
    @JvmField val LLAMA_SWAG = register("entity.llama.swag")
    @JvmField val MAGMA_CUBE_DEATH_SMALL = register("entity.magma_cube.death_small")
    @JvmField val LODESTONE_BREAK = register("block.lodestone.break")
    @JvmField val LODESTONE_STEP = register("block.lodestone.step")
    @JvmField val LODESTONE_PLACE = register("block.lodestone.place")
    @JvmField val LODESTONE_HIT = register("block.lodestone.hit")
    @JvmField val LODESTONE_FALL = register("block.lodestone.fall")
    @JvmField val LODESTONE_COMPASS_LOCK = register("item.lodestone_compass.lock")
    @JvmField val MAGMA_CUBE_DEATH = register("entity.magma_cube.death")
    @JvmField val MAGMA_CUBE_HURT = register("entity.magma_cube.hurt")
    @JvmField val MAGMA_CUBE_HURT_SMALL = register("entity.magma_cube.hurt_small")
    @JvmField val MAGMA_CUBE_JUMP = register("entity.magma_cube.jump")
    @JvmField val MAGMA_CUBE_SQUISH = register("entity.magma_cube.squish")
    @JvmField val MAGMA_CUBE_SQUISH_SMALL = register("entity.magma_cube.squish_small")
    @JvmField val MEDIUM_AMETHYST_BUD_BREAK = register("block.medium_amethyst_bud.break")
    @JvmField val MEDIUM_AMETHYST_BUD_PLACE = register("block.medium_amethyst_bud.place")
    @JvmField val METAL_BREAK = register("block.metal.break")
    @JvmField val METAL_FALL = register("block.metal.fall")
    @JvmField val METAL_HIT = register("block.metal.hit")
    @JvmField val METAL_PLACE = register("block.metal.place")
    @JvmField val METAL_PRESSURE_PLATE_CLICK_OFF = register("block.metal_pressure_plate.click_off")
    @JvmField val METAL_PRESSURE_PLATE_CLICK_ON = register("block.metal_pressure_plate.click_on")
    @JvmField val METAL_STEP = register("block.metal.step")
    @JvmField val MINECART_INSIDE_UNDERWATER = register("entity.minecart.inside.underwater")
    @JvmField val MINECART_INSIDE = register("entity.minecart.inside")
    @JvmField val MINECART_RIDING = register("entity.minecart.riding")
    @JvmField val MOOSHROOM_CONVERT = register("entity.mooshroom.convert")
    @JvmField val MOOSHROOM_EAT = register("entity.mooshroom.eat")
    @JvmField val MOOSHROOM_MILK = register("entity.mooshroom.milk")
    @JvmField val MOOSHROOM_MILK_SUSPICIOUSLY = register("entity.mooshroom.suspicious_milk")
    @JvmField val MOOSHROOM_SHEAR = register("entity.mooshroom.shear")
    @JvmField val MOSS_CARPET_BREAK = register("block.moss_carpet.break")
    @JvmField val MOSS_CARPET_FALL = register("block.moss_carpet.fall")
    @JvmField val MOSS_CARPET_HIT = register("block.moss_carpet.hit")
    @JvmField val MOSS_CARPET_PLACE = register("block.moss_carpet.place")
    @JvmField val MOSS_CARPET_STEP = register("block.moss_carpet.step")
    @JvmField val MOSS_BREAK = register("block.moss.break")
    @JvmField val MOSS_FALL = register("block.moss.fall")
    @JvmField val MOSS_HIT = register("block.moss.hit")
    @JvmField val MOSS_PLACE = register("block.moss.place")
    @JvmField val MOSS_STEP = register("block.moss.step")
    @JvmField val MULE_AMBIENT = register("entity.mule.ambient")
    @JvmField val MULE_ANGRY = register("entity.mule.angry")
    @JvmField val MULE_CHEST = register("entity.mule.chest")
    @JvmField val MULE_DEATH = register("entity.mule.death")
    @JvmField val MULE_EAT = register("entity.mule.eat")
    @JvmField val MULE_HURT = register("entity.mule.hurt")
    @JvmField val MUSIC_CREATIVE = register("music.creative")
    @JvmField val MUSIC_CREDITS = register("music.credits")
    @JvmField val MUSIC_DISC_11 = register("music_disc.11")
    @JvmField val MUSIC_DISC_13 = register("music_disc.13")
    @JvmField val MUSIC_DISC_BLOCKS = register("music_disc.blocks")
    @JvmField val MUSIC_DISC_CAT = register("music_disc.cat")
    @JvmField val MUSIC_DISC_CHIRP = register("music_disc.chirp")
    @JvmField val MUSIC_DISC_FAR = register("music_disc.far")
    @JvmField val MUSIC_DISC_MALL = register("music_disc.mall")
    @JvmField val MUSIC_DISC_MELLOHI = register("music_disc.mellohi")
    @JvmField val MUSIC_DISC_PIGSTEP = register("music_disc.pigstep")
    @JvmField val MUSIC_DISC_STAL = register("music_disc.stal")
    @JvmField val MUSIC_DISC_STRAD = register("music_disc.strad")
    @JvmField val MUSIC_DISC_WAIT = register("music_disc.wait")
    @JvmField val MUSIC_DISC_WARD = register("music_disc.ward")
    @JvmField val MUSIC_DRAGON = register("music.dragon")
    @JvmField val MUSIC_END = register("music.end")
    @JvmField val MUSIC_GAME = register("music.game")
    @JvmField val MUSIC_MENU = register("music.menu")
    @JvmField val MUSIC_BIOME_BASALT_DELTAS = register("music.nether.basalt_deltas")
    @JvmField val MUSIC_BIOME_NETHER_WASTES = register("music.nether.nether_wastes")
    @JvmField val MUSIC_BIOME_SOUL_SAND_VALLEY = register("music.nether.soul_sand_valley")
    @JvmField val MUSIC_BIOME_CRIMSON_FOREST = register("music.nether.crimson_forest")
    @JvmField val MUSIC_BIOME_WARPED_FOREST = register("music.nether.warped_forest")
    @JvmField val MUSIC_UNDER_WATER = register("music.under_water")
    @JvmField val NETHER_BRICKS_BREAK = register("block.nether_bricks.break")
    @JvmField val NETHER_BRICKS_STEP = register("block.nether_bricks.step")
    @JvmField val NETHER_BRICKS_PLACE = register("block.nether_bricks.place")
    @JvmField val NETHER_BRICKS_HIT = register("block.nether_bricks.hit")
    @JvmField val NETHER_BRICKS_FALL = register("block.nether_bricks.fall")
    @JvmField val NETHER_WART_BREAK = register("block.nether_wart.break")
    @JvmField val NETHER_WART_PLANTED = register("item.nether_wart.plant")
    @JvmField val STEM_BREAK = register("block.stem.break")
    @JvmField val STEM_STEP = register("block.stem.step")
    @JvmField val STEM_PLACE = register("block.stem.place")
    @JvmField val STEM_HIT = register("block.stem.hit")
    @JvmField val STEM_FALL = register("block.stem.fall")
    @JvmField val NYLIUM_BREAK = register("block.nylium.break")
    @JvmField val NYLIUM_STEP = register("block.nylium.step")
    @JvmField val NYLIUM_PLACE = register("block.nylium.place")
    @JvmField val NYLIUM_HIT = register("block.nylium.hit")
    @JvmField val NYLIUM_FALL = register("block.nylium.fall")
    @JvmField val NETHER_SPROUTS_BREAK = register("block.nether_sprouts.break")
    @JvmField val NETHER_SPROUTS_STEP = register("block.nether_sprouts.step")
    @JvmField val NETHER_SPROUTS_PLACE = register("block.nether_sprouts.place")
    @JvmField val NETHER_SPROUTS_HIT = register("block.nether_sprouts.hit")
    @JvmField val NETHER_SPROUTS_FALL = register("block.nether_sprouts.fall")
    @JvmField val FUNGUS_BREAK = register("block.fungus.break")
    @JvmField val FUNGUS_STEP = register("block.fungus.step")
    @JvmField val FUNGUS_PLACE = register("block.fungus.place")
    @JvmField val FUNGUS_HIT = register("block.fungus.hit")
    @JvmField val FUNGUS_FALL = register("block.fungus.fall")
    @JvmField val WEEPING_VINES_BREAK = register("block.weeping_vines.break")
    @JvmField val WEEPING_VINES_STEP = register("block.weeping_vines.step")
    @JvmField val WEEPING_VINES_PLACE = register("block.weeping_vines.place")
    @JvmField val WEEPING_VINES_HIT = register("block.weeping_vines.hit")
    @JvmField val WEEPING_VINES_FALL = register("block.weeping_vines.fall")
    @JvmField val WART_BLOCK_BREAK = register("block.wart_block.break")
    @JvmField val WART_BLOCK_STEP = register("block.wart_block.step")
    @JvmField val WART_BLOCK_PLACE = register("block.wart_block.place")
    @JvmField val WART_BLOCK_HIT = register("block.wart_block.hit")
    @JvmField val WART_BLOCK_FALL = register("block.wart_block.fall")
    @JvmField val NETHERITE_BLOCK_BREAK = register("block.netherite_block.break")
    @JvmField val NETHERITE_BLOCK_STEP = register("block.netherite_block.step")
    @JvmField val NETHERITE_BLOCK_PLACE = register("block.netherite_block.place")
    @JvmField val NETHERITE_BLOCK_HIT = register("block.netherite_block.hit")
    @JvmField val NETHERITE_BLOCK_FALL = register("block.netherite_block.fall")
    @JvmField val NETHERRACK_BREAK = register("block.netherrack.break")
    @JvmField val NETHERRACK_STEP = register("block.netherrack.step")
    @JvmField val NETHERRACK_PLACE = register("block.netherrack.place")
    @JvmField val NETHERRACK_HIT = register("block.netherrack.hit")
    @JvmField val NETHERRACK_FALL = register("block.netherrack.fall")
    @JvmField val NOTE_BLOCK_BASE_DRUM = register("block.note_block.basedrum")
    @JvmField val NOTE_BLOCK_BASS = register("block.note_block.bass")
    @JvmField val NOTE_BLOCK_BELL = register("block.note_block.bell")
    @JvmField val NOTE_BLOCK_CHIME = register("block.note_block.chime")
    @JvmField val NOTE_BLOCK_FLUTE = register("block.note_block.flute")
    @JvmField val NOTE_BLOCK_GUITAR = register("block.note_block.guitar")
    @JvmField val NOTE_BLOCK_HARP = register("block.note_block.harp")
    @JvmField val NOTE_BLOCK_HAT = register("block.note_block.hat")
    @JvmField val NOTE_BLOCK_PLING = register("block.note_block.pling")
    @JvmField val NOTE_BLOCK_SNARE = register("block.note_block.snare")
    @JvmField val NOTE_BLOCK_XYLOPHONE = register("block.note_block.xylophone")
    @JvmField val NOTE_BLOCK_IRON_XYLOPHONE = register("block.note_block.iron_xylophone")
    @JvmField val NOTE_BLOCK_COW_BELL = register("block.note_block.cow_bell")
    @JvmField val NOTE_BLOCK_DIDGERIDOO = register("block.note_block.didgeridoo")
    @JvmField val NOTE_BLOCK_BIT = register("block.note_block.bit")
    @JvmField val NOTE_BLOCK_BANJO = register("block.note_block.banjo")
    @JvmField val OCELOT_HURT = register("entity.ocelot.hurt")
    @JvmField val OCELOT_AMBIENT = register("entity.ocelot.ambient")
    @JvmField val OCELOT_DEATH = register("entity.ocelot.death")
    @JvmField val PAINTING_BREAK = register("entity.painting.break")
    @JvmField val PAINTING_PLACE = register("entity.painting.place")
    @JvmField val PANDA_PRE_SNEEZE = register("entity.panda.pre_sneeze")
    @JvmField val PANDA_SNEEZE = register("entity.panda.sneeze")
    @JvmField val PANDA_AMBIENT = register("entity.panda.ambient")
    @JvmField val PANDA_DEATH = register("entity.panda.death")
    @JvmField val PANDA_EAT = register("entity.panda.eat")
    @JvmField val PANDA_STEP = register("entity.panda.step")
    @JvmField val PANDA_CANT_BREED = register("entity.panda.cant_breed")
    @JvmField val PANDA_AGGRESSIVE_AMBIENT = register("entity.panda.aggressive_ambient")
    @JvmField val PANDA_WORRIED_AMBIENT = register("entity.panda.worried_ambient")
    @JvmField val PANDA_HURT = register("entity.panda.hurt")
    @JvmField val PANDA_BITE = register("entity.panda.bite")
    @JvmField val PARROT_AMBIENT = register("entity.parrot.ambient")
    @JvmField val PARROT_DEATH = register("entity.parrot.death")
    @JvmField val PARROT_EAT = register("entity.parrot.eat")
    @JvmField val PARROT_FLY = register("entity.parrot.fly")
    @JvmField val PARROT_HURT = register("entity.parrot.hurt")
    @JvmField val PARROT_IMITATE_BLAZE = register("entity.parrot.imitate.blaze")
    @JvmField val PARROT_IMITATE_CREEPER = register("entity.parrot.imitate.creeper")
    @JvmField val PARROT_IMITATE_DROWNED = register("entity.parrot.imitate.drowned")
    @JvmField val PARROT_IMITATE_ELDER_GUARDIAN = register("entity.parrot.imitate.elder_guardian")
    @JvmField val PARROT_IMITATE_ENDER_DRAGON = register("entity.parrot.imitate.ender_dragon")
    @JvmField val PARROT_IMITATE_ENDERMITE = register("entity.parrot.imitate.endermite")
    @JvmField val PARROT_IMITATE_EVOKER = register("entity.parrot.imitate.evoker")
    @JvmField val PARROT_IMITATE_GHAST = register("entity.parrot.imitate.ghast")
    @JvmField val PARROT_IMITATE_GUARDIAN = register("entity.parrot.imitate.guardian")
    @JvmField val PARROT_IMITATE_HOGLIN = register("entity.parrot.imitate.hoglin")
    @JvmField val PARROT_IMITATE_HUSK = register("entity.parrot.imitate.husk")
    @JvmField val PARROT_IMITATE_ILLUSIONER = register("entity.parrot.imitate.illusioner")
    @JvmField val PARROT_IMITATE_MAGMA_CUBE = register("entity.parrot.imitate.magma_cube")
    @JvmField val PARROT_IMITATE_PHANTOM = register("entity.parrot.imitate.phantom")
    @JvmField val PARROT_IMITATE_PIGLIN = register("entity.parrot.imitate.piglin")
    @JvmField val PARROT_IMITATE_PIGLIN_BRUTE = register("entity.parrot.imitate.piglin_brute")
    @JvmField val PARROT_IMITATE_PILLAGER = register("entity.parrot.imitate.pillager")
    @JvmField val PARROT_IMITATE_RAVAGER = register("entity.parrot.imitate.ravager")
    @JvmField val PARROT_IMITATE_SHULKER = register("entity.parrot.imitate.shulker")
    @JvmField val PARROT_IMITATE_SILVERFISH = register("entity.parrot.imitate.silverfish")
    @JvmField val PARROT_IMITATE_SKELETON = register("entity.parrot.imitate.skeleton")
    @JvmField val PARROT_IMITATE_SLIME = register("entity.parrot.imitate.slime")
    @JvmField val PARROT_IMITATE_SPIDER = register("entity.parrot.imitate.spider")
    @JvmField val PARROT_IMITATE_STRAY = register("entity.parrot.imitate.stray")
    @JvmField val PARROT_IMITATE_VEX = register("entity.parrot.imitate.vex")
    @JvmField val PARROT_IMITATE_VINDICATOR = register("entity.parrot.imitate.vindicator")
    @JvmField val PARROT_IMITATE_WITCH = register("entity.parrot.imitate.witch")
    @JvmField val PARROT_IMITATE_WITHER = register("entity.parrot.imitate.wither")
    @JvmField val PARROT_IMITATE_WITHER_SKELETON = register("entity.parrot.imitate.wither_skeleton")
    @JvmField val PARROT_IMITATE_ZOGLIN = register("entity.parrot.imitate.zoglin")
    @JvmField val PARROT_IMITATE_ZOMBIE = register("entity.parrot.imitate.zombie")
    @JvmField val PARROT_IMITATE_ZOMBIE_VILLAGER = register("entity.parrot.imitate.zombie_villager")
    @JvmField val PARROT_STEP = register("entity.parrot.step")
    @JvmField val PHANTOM_AMBIENT = register("entity.phantom.ambient")
    @JvmField val PHANTOM_BITE = register("entity.phantom.bite")
    @JvmField val PHANTOM_DEATH = register("entity.phantom.death")
    @JvmField val PHANTOM_FLAP = register("entity.phantom.flap")
    @JvmField val PHANTOM_HURT = register("entity.phantom.hurt")
    @JvmField val PHANTOM_SWOOP = register("entity.phantom.swoop")
    @JvmField val PIG_AMBIENT = register("entity.pig.ambient")
    @JvmField val PIG_DEATH = register("entity.pig.death")
    @JvmField val PIG_HURT = register("entity.pig.hurt")
    @JvmField val PIG_SADDLE = register("entity.pig.saddle")
    @JvmField val PIG_STEP = register("entity.pig.step")
    @JvmField val PIGLIN_ADMIRING_ITEM = register("entity.piglin.admiring_item")
    @JvmField val PIGLIN_AMBIENT = register("entity.piglin.ambient")
    @JvmField val PIGLIN_ANGRY = register("entity.piglin.angry")
    @JvmField val PIGLIN_CELEBRATE = register("entity.piglin.celebrate")
    @JvmField val PIGLIN_DEATH = register("entity.piglin.death")
    @JvmField val PIGLIN_JEALOUS = register("entity.piglin.jealous")
    @JvmField val PIGLIN_HURT = register("entity.piglin.hurt")
    @JvmField val PIGLIN_RETREAT = register("entity.piglin.retreat")
    @JvmField val PIGLIN_STEP = register("entity.piglin.step")
    @JvmField val PIGLIN_CONVERTED_TO_ZOMBIFIED = register("entity.piglin.converted_to_zombified")
    @JvmField val PIGLIN_BRUTE_AMBIENT = register("entity.piglin_brute.ambient")
    @JvmField val PIGLIN_BRUTE_ANGRY = register("entity.piglin_brute.angry")
    @JvmField val PIGLIN_BRUTE_DEATH = register("entity.piglin_brute.death")
    @JvmField val PIGLIN_BRUTE_HURT = register("entity.piglin_brute.hurt")
    @JvmField val PIGLIN_BRUTE_STEP = register("entity.piglin_brute.step")
    @JvmField val PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED = register("entity.piglin_brute.converted_to_zombified")
    @JvmField val PILLAGER_AMBIENT = register("entity.pillager.ambient")
    @JvmField val PILLAGER_CELEBRATE = register("entity.pillager.celebrate")
    @JvmField val PILLAGER_DEATH = register("entity.pillager.death")
    @JvmField val PILLAGER_HURT = register("entity.pillager.hurt")
    @JvmField val PISTON_CONTRACT = register("block.piston.contract")
    @JvmField val PISTON_EXTEND = register("block.piston.extend")
    @JvmField val PLAYER_ATTACK_CRIT = register("entity.player.attack.crit")
    @JvmField val PLAYER_ATTACK_KNOCKBACK = register("entity.player.attack.knockback")
    @JvmField val PLAYER_ATTACK_NO_DAMAGE = register("entity.player.attack.nodamage")
    @JvmField val PLAYER_ATTACK_STRONG = register("entity.player.attack.strong")
    @JvmField val PLAYER_ATTACK_SWEEP = register("entity.player.attack.sweep")
    @JvmField val PLAYER_ATTACK_WEAK = register("entity.player.attack.weak")
    @JvmField val PLAYER_BIG_FALL = register("entity.player.big_fall")
    @JvmField val PLAYER_BREATH = register("entity.player.breath")
    @JvmField val PLAYER_BURP = register("entity.player.burp")
    @JvmField val PLAYER_DEATH = register("entity.player.death")
    @JvmField val PLAYER_HURT = register("entity.player.hurt")
    @JvmField val PLAYER_HURT_DROWN = register("entity.player.hurt_drown")
    @JvmField val PLAYER_HURT_FREEZE = register("entity.player.hurt_freeze")
    @JvmField val PLAYER_HURT_ON_FIRE = register("entity.player.hurt_on_fire")
    @JvmField val PLAYER_HURT_SWEET_BERRY_BUSH = register("entity.player.hurt_sweet_berry_bush")
    @JvmField val PLAYER_LEVELUP = register("entity.player.levelup")
    @JvmField val PLAYER_SMALL_FALL = register("entity.player.small_fall")
    @JvmField val PLAYER_SPLASH = register("entity.player.splash")
    @JvmField val PLAYER_SPLASH_HIGH_SPEED = register("entity.player.splash.high_speed")
    @JvmField val PLAYER_SWIM = register("entity.player.swim")
    @JvmField val POLAR_BEAR_AMBIENT = register("entity.polar_bear.ambient")
    @JvmField val POLAR_BEAR_AMBIENT_BABY = register("entity.polar_bear.ambient_baby")
    @JvmField val POLAR_BEAR_DEATH = register("entity.polar_bear.death")
    @JvmField val POLAR_BEAR_HURT = register("entity.polar_bear.hurt")
    @JvmField val POLAR_BEAR_STEP = register("entity.polar_bear.step")
    @JvmField val POLAR_BEAR_WARNING = register("entity.polar_bear.warning")
    @JvmField val POLISHED_DEEPSLATE_BREAK = register("block.polished_deepslate.break")
    @JvmField val POLISHED_DEEPSLATE_FALL = register("block.polished_deepslate.fall")
    @JvmField val POLISHED_DEEPSLATE_HIT = register("block.polished_deepslate.hit")
    @JvmField val POLISHED_DEEPSLATE_PLACE = register("block.polished_deepslate.place")
    @JvmField val POLISHED_DEEPSLATE_STEP = register("block.polished_deepslate.step")
    @JvmField val PORTAL_AMBIENT = register("block.portal.ambient")
    @JvmField val PORTAL_TRAVEL = register("block.portal.travel")
    @JvmField val PORTAL_TRIGGER = register("block.portal.trigger")
    @JvmField val POWDER_SNOW_BREAK = register("block.powder_snow.break")
    @JvmField val POWDER_SNOW_FALL = register("block.powder_snow.fall")
    @JvmField val POWDER_SNOW_HIT = register("block.powder_snow.hit")
    @JvmField val POWDER_SNOW_PLACE = register("block.powder_snow.place")
    @JvmField val POWDER_SNOW_STEP = register("block.powder_snow.step")
    @JvmField val PUFFER_FISH_AMBIENT = register("entity.puffer_fish.ambient")
    @JvmField val PUFFER_FISH_BLOW_OUT = register("entity.puffer_fish.blow_out")
    @JvmField val PUFFER_FISH_BLOW_UP = register("entity.puffer_fish.blow_up")
    @JvmField val PUFFER_FISH_DEATH = register("entity.puffer_fish.death")
    @JvmField val PUFFER_FISH_FLOP = register("entity.puffer_fish.flop")
    @JvmField val PUFFER_FISH_HURT = register("entity.puffer_fish.hurt")
    @JvmField val PUFFER_FISH_STING = register("entity.puffer_fish.sting")
    @JvmField val PUMPKIN_CARVE = register("block.pumpkin.carve")
    @JvmField val RABBIT_AMBIENT = register("entity.rabbit.ambient")
    @JvmField val RABBIT_ATTACK = register("entity.rabbit.attack")
    @JvmField val RABBIT_DEATH = register("entity.rabbit.death")
    @JvmField val RABBIT_HURT = register("entity.rabbit.hurt")
    @JvmField val RABBIT_JUMP = register("entity.rabbit.jump")
    @JvmField val RAID_HORN = register("event.raid.horn")
    @JvmField val RAVAGER_AMBIENT = register("entity.ravager.ambient")
    @JvmField val RAVAGER_ATTACK = register("entity.ravager.attack")
    @JvmField val RAVAGER_CELEBRATE = register("entity.ravager.celebrate")
    @JvmField val RAVAGER_DEATH = register("entity.ravager.death")
    @JvmField val RAVAGER_HURT = register("entity.ravager.hurt")
    @JvmField val RAVAGER_STEP = register("entity.ravager.step")
    @JvmField val RAVAGER_STUNNED = register("entity.ravager.stunned")
    @JvmField val RAVAGER_ROAR = register("entity.ravager.roar")
    @JvmField val NETHER_GOLD_ORE_BREAK = register("block.nether_gold_ore.break")
    @JvmField val NETHER_GOLD_ORE_FALL = register("block.nether_gold_ore.fall")
    @JvmField val NETHER_GOLD_ORE_HIT = register("block.nether_gold_ore.hit")
    @JvmField val NETHER_GOLD_ORE_PLACE = register("block.nether_gold_ore.place")
    @JvmField val NETHER_GOLD_ORE_STEP = register("block.nether_gold_ore.step")
    @JvmField val NETHER_ORE_BREAK = register("block.nether_ore.break")
    @JvmField val NETHER_ORE_FALL = register("block.nether_ore.fall")
    @JvmField val NETHER_ORE_HIT = register("block.nether_ore.hit")
    @JvmField val NETHER_ORE_PLACE = register("block.nether_ore.place")
    @JvmField val NETHER_ORE_STEP = register("block.nether_ore.step")
    @JvmField val REDSTONE_TORCH_BURNOUT = register("block.redstone_torch.burnout")
    @JvmField val RESPAWN_ANCHOR_AMBIENT = register("block.respawn_anchor.ambient")
    @JvmField val RESPAWN_ANCHOR_CHARGE = register("block.respawn_anchor.charge")
    @JvmField val RESPAWN_ANCHOR_DEPLETE = register("block.respawn_anchor.deplete")
    @JvmField val RESPAWN_ANCHOR_SET_SPAWN = register("block.respawn_anchor.set_spawn")
    @JvmField val ROOTED_DIRT_BREAK = register("block.rooted_dirt.break")
    @JvmField val ROOTED_DIRT_FALL = register("block.rooted_dirt.fall")
    @JvmField val ROOTED_DIRT_HIT = register("block.rooted_dirt.hit")
    @JvmField val ROOTED_DIRT_PLACE = register("block.rooted_dirt.place")
    @JvmField val ROOTED_DIRT_STEP = register("block.rooted_dirt.step")
    @JvmField val SALMON_AMBIENT = register("entity.salmon.ambient")
    @JvmField val SALMON_DEATH = register("entity.salmon.death")
    @JvmField val SALMON_FLOP = register("entity.salmon.flop")
    @JvmField val SALMON_HURT = register("entity.salmon.hurt")
    @JvmField val SAND_BREAK = register("block.sand.break")
    @JvmField val SAND_FALL = register("block.sand.fall")
    @JvmField val SAND_HIT = register("block.sand.hit")
    @JvmField val SAND_PLACE = register("block.sand.place")
    @JvmField val SAND_STEP = register("block.sand.step")
    @JvmField val SCAFFOLDING_BREAK = register("block.scaffolding.break")
    @JvmField val SCAFFOLDING_FALL = register("block.scaffolding.fall")
    @JvmField val SCAFFOLDING_HIT = register("block.scaffolding.hit")
    @JvmField val SCAFFOLDING_PLACE = register("block.scaffolding.place")
    @JvmField val SCAFFOLDING_STEP = register("block.scaffolding.step")
    @JvmField val SCULK_CLICKING = register("block.sculk_sensor.clicking")
    @JvmField val SCULK_CLICKING_STOP = register("block.sculk_sensor.clicking_stop")
    @JvmField val SCULK_SENSOR_BREAK = register("block.sculk_sensor.break")
    @JvmField val SCULK_SENSOR_FALL = register("block.sculk_sensor.fall")
    @JvmField val SCULK_SENSOR_HIT = register("block.sculk_sensor.hit")
    @JvmField val SCULK_SENSOR_PLACE = register("block.sculk_sensor.place")
    @JvmField val SCULK_SENSOR_STEP = register("block.sculk_sensor.step")
    @JvmField val SHEEP_AMBIENT = register("entity.sheep.ambient")
    @JvmField val SHEEP_DEATH = register("entity.sheep.death")
    @JvmField val SHEEP_HURT = register("entity.sheep.hurt")
    @JvmField val SHEEP_SHEAR = register("entity.sheep.shear")
    @JvmField val SHEEP_STEP = register("entity.sheep.step")
    @JvmField val SHIELD_BLOCK = register("item.shield.block")
    @JvmField val SHIELD_BREAK = register("item.shield.break")
    @JvmField val SHROOMLIGHT_BREAK = register("block.shroomlight.break")
    @JvmField val SHROOMLIGHT_STEP = register("block.shroomlight.step")
    @JvmField val SHROOMLIGHT_PLACE = register("block.shroomlight.place")
    @JvmField val SHROOMLIGHT_HIT = register("block.shroomlight.hit")
    @JvmField val SHROOMLIGHT_FALL = register("block.shroomlight.fall")
    @JvmField val SHOVEL_FLATTEN = register("item.shovel.flatten")
    @JvmField val SHULKER_AMBIENT = register("entity.shulker.ambient")
    @JvmField val SHULKER_BOX_CLOSE = register("block.shulker_box.close")
    @JvmField val SHULKER_BOX_OPEN = register("block.shulker_box.open")
    @JvmField val SHULKER_BULLET_HIT = register("entity.shulker_bullet.hit")
    @JvmField val SHULKER_BULLET_HURT = register("entity.shulker_bullet.hurt")
    @JvmField val SHULKER_CLOSE = register("entity.shulker.close")
    @JvmField val SHULKER_DEATH = register("entity.shulker.death")
    @JvmField val SHULKER_HURT = register("entity.shulker.hurt")
    @JvmField val SHULKER_HURT_CLOSED = register("entity.shulker.hurt_closed")
    @JvmField val SHULKER_OPEN = register("entity.shulker.open")
    @JvmField val SHULKER_SHOOT = register("entity.shulker.shoot")
    @JvmField val SHULKER_TELEPORT = register("entity.shulker.teleport")
    @JvmField val SILVERFISH_AMBIENT = register("entity.silverfish.ambient")
    @JvmField val SILVERFISH_DEATH = register("entity.silverfish.death")
    @JvmField val SILVERFISH_HURT = register("entity.silverfish.hurt")
    @JvmField val SILVERFISH_STEP = register("entity.silverfish.step")
    @JvmField val SKELETON_AMBIENT = register("entity.skeleton.ambient")
    @JvmField val SKELETON_CONVERTED_TO_STRAY = register("entity.skeleton.converted_to_stray")
    @JvmField val SKELETON_DEATH = register("entity.skeleton.death")
    @JvmField val SKELETON_HORSE_AMBIENT = register("entity.skeleton_horse.ambient")
    @JvmField val SKELETON_HORSE_DEATH = register("entity.skeleton_horse.death")
    @JvmField val SKELETON_HORSE_HURT = register("entity.skeleton_horse.hurt")
    @JvmField val SKELETON_HORSE_SWIM = register("entity.skeleton_horse.swim")
    @JvmField val SKELETON_HORSE_AMBIENT_WATER = register("entity.skeleton_horse.ambient_water")
    @JvmField val SKELETON_HORSE_GALLOP_WATER = register("entity.skeleton_horse.gallop_water")
    @JvmField val SKELETON_HORSE_JUMP_WATER = register("entity.skeleton_horse.jump_water")
    @JvmField val SKELETON_HORSE_STEP_WATER = register("entity.skeleton_horse.step_water")
    @JvmField val SKELETON_HURT = register("entity.skeleton.hurt")
    @JvmField val SKELETON_SHOOT = register("entity.skeleton.shoot")
    @JvmField val SKELETON_STEP = register("entity.skeleton.step")
    @JvmField val SLIME_ATTACK = register("entity.slime.attack")
    @JvmField val SLIME_DEATH = register("entity.slime.death")
    @JvmField val SLIME_HURT = register("entity.slime.hurt")
    @JvmField val SLIME_JUMP = register("entity.slime.jump")
    @JvmField val SLIME_SQUISH = register("entity.slime.squish")
    @JvmField val SLIME_BLOCK_BREAK = register("block.slime_block.break")
    @JvmField val SLIME_BLOCK_FALL = register("block.slime_block.fall")
    @JvmField val SLIME_BLOCK_HIT = register("block.slime_block.hit")
    @JvmField val SLIME_BLOCK_PLACE = register("block.slime_block.place")
    @JvmField val SLIME_BLOCK_STEP = register("block.slime_block.step")
    @JvmField val SMALL_AMETHYST_BUD_BREAK = register("block.small_amethyst_bud.break")
    @JvmField val SMALL_AMETHYST_BUD_PLACE = register("block.small_amethyst_bud.place")
    @JvmField val SMALL_DRIPLEAF_BREAK = register("block.small_dripleaf.break")
    @JvmField val SMALL_DRIPLEAF_FALL = register("block.small_dripleaf.fall")
    @JvmField val SMALL_DRIPLEAF_HIT = register("block.small_dripleaf.hit")
    @JvmField val SMALL_DRIPLEAF_PLACE = register("block.small_dripleaf.place")
    @JvmField val SMALL_DRIPLEAF_STEP = register("block.small_dripleaf.step")
    @JvmField val SOUL_SAND_BREAK = register("block.soul_sand.break")
    @JvmField val SOUL_SAND_STEP = register("block.soul_sand.step")
    @JvmField val SOUL_SAND_PLACE = register("block.soul_sand.place")
    @JvmField val SOUL_SAND_HIT = register("block.soul_sand.hit")
    @JvmField val SOUL_SAND_FALL = register("block.soul_sand.fall")
    @JvmField val SOUL_SOIL_BREAK = register("block.soul_soil.break")
    @JvmField val SOUL_SOIL_STEP = register("block.soul_soil.step")
    @JvmField val SOUL_SOIL_PLACE = register("block.soul_soil.place")
    @JvmField val SOUL_SOIL_HIT = register("block.soul_soil.hit")
    @JvmField val SOUL_SOIL_FALL = register("block.soul_soil.fall")
    @JvmField val SOUL_ESCAPE = register("particle.soul_escape")
    @JvmField val SPORE_BLOSSOM_BREAK = register("block.spore_blossom.break")
    @JvmField val SPORE_BLOSSOM_FALL = register("block.spore_blossom.fall")
    @JvmField val SPORE_BLOSSOM_HIT = register("block.spore_blossom.hit")
    @JvmField val SPORE_BLOSSOM_PLACE = register("block.spore_blossom.place")
    @JvmField val SPORE_BLOSSOM_STEP = register("block.spore_blossom.step")
    @JvmField val STRIDER_AMBIENT = register("entity.strider.ambient")
    @JvmField val STRIDER_HAPPY = register("entity.strider.happy")
    @JvmField val STRIDER_RETREAT = register("entity.strider.retreat")
    @JvmField val STRIDER_DEATH = register("entity.strider.death")
    @JvmField val STRIDER_HURT = register("entity.strider.hurt")
    @JvmField val STRIDER_STEP = register("entity.strider.step")
    @JvmField val STRIDER_STEP_LAVA = register("entity.strider.step_lava")
    @JvmField val STRIDER_EAT = register("entity.strider.eat")
    @JvmField val STRIDER_SADDLE = register("entity.strider.saddle")
    @JvmField val SLIME_DEATH_SMALL = register("entity.slime.death_small")
    @JvmField val SLIME_HURT_SMALL = register("entity.slime.hurt_small")
    @JvmField val SLIME_JUMP_SMALL = register("entity.slime.jump_small")
    @JvmField val SLIME_SQUISH_SMALL = register("entity.slime.squish_small")
    @JvmField val SMITHING_TABLE_USE = register("block.smithing_table.use")
    @JvmField val SMOKER_SMOKE = register("block.smoker.smoke")
    @JvmField val SNOWBALL_THROW = register("entity.snowball.throw")
    @JvmField val SNOW_BREAK = register("block.snow.break")
    @JvmField val SNOW_FALL = register("block.snow.fall")
    @JvmField val SNOW_GOLEM_AMBIENT = register("entity.snow_golem.ambient")
    @JvmField val SNOW_GOLEM_DEATH = register("entity.snow_golem.death")
    @JvmField val SNOW_GOLEM_HURT = register("entity.snow_golem.hurt")
    @JvmField val SNOW_GOLEM_SHOOT = register("entity.snow_golem.shoot")
    @JvmField val SNOW_GOLEM_SHEAR = register("entity.snow_golem.shear")
    @JvmField val SNOW_HIT = register("block.snow.hit")
    @JvmField val SNOW_PLACE = register("block.snow.place")
    @JvmField val SNOW_STEP = register("block.snow.step")
    @JvmField val SPIDER_AMBIENT = register("entity.spider.ambient")
    @JvmField val SPIDER_DEATH = register("entity.spider.death")
    @JvmField val SPIDER_HURT = register("entity.spider.hurt")
    @JvmField val SPIDER_STEP = register("entity.spider.step")
    @JvmField val SPLASH_POTION_BREAK = register("entity.splash_potion.break")
    @JvmField val SPLASH_POTION_THROW = register("entity.splash_potion.throw")
    @JvmField val SPYGLASS_USE = register("item.spyglass.use")
    @JvmField val SPYGLASS_STOP_USING = register("item.spyglass.stop_using")
    @JvmField val SQUID_AMBIENT = register("entity.squid.ambient")
    @JvmField val SQUID_DEATH = register("entity.squid.death")
    @JvmField val SQUID_HURT = register("entity.squid.hurt")
    @JvmField val SQUID_SQUIRT = register("entity.squid.squirt")
    @JvmField val STONE_BREAK = register("block.stone.break")
    @JvmField val STONE_BUTTON_CLICK_OFF = register("block.stone_button.click_off")
    @JvmField val STONE_BUTTON_CLICK_ON = register("block.stone_button.click_on")
    @JvmField val STONE_FALL = register("block.stone.fall")
    @JvmField val STONE_HIT = register("block.stone.hit")
    @JvmField val STONE_PLACE = register("block.stone.place")
    @JvmField val STONE_PRESSURE_PLATE_CLICK_OFF = register("block.stone_pressure_plate.click_off")
    @JvmField val STONE_PRESSURE_PLATE_CLICK_ON = register("block.stone_pressure_plate.click_on")
    @JvmField val STONE_STEP = register("block.stone.step")
    @JvmField val STRAY_AMBIENT = register("entity.stray.ambient")
    @JvmField val STRAY_DEATH = register("entity.stray.death")
    @JvmField val STRAY_HURT = register("entity.stray.hurt")
    @JvmField val STRAY_STEP = register("entity.stray.step")
    @JvmField val SWEET_BERRY_BUSH_BREAK = register("block.sweet_berry_bush.break")
    @JvmField val SWEET_BERRY_BUSH_PLACE = register("block.sweet_berry_bush.place")
    @JvmField val SWEET_BERRY_BUSH_PICK_BERRIES = register("block.sweet_berry_bush.pick_berries")
    @JvmField val THORNS_HIT = register("enchant.thorns.hit")
    @JvmField val TNT_PRIMED = register("entity.tnt.primed")
    @JvmField val TOTEM_USE = register("item.totem.use")
    @JvmField val TRIDENT_HIT = register("item.trident.hit")
    @JvmField val TRIDENT_HIT_GROUND = register("item.trident.hit_ground")
    @JvmField val TRIDENT_RETURN = register("item.trident.return")
    @JvmField val TRIDENT_RIPTIDE_1 = register("item.trident.riptide_1")
    @JvmField val TRIDENT_RIPTIDE_2 = register("item.trident.riptide_2")
    @JvmField val TRIDENT_RIPTIDE_3 = register("item.trident.riptide_3")
    @JvmField val TRIDENT_THROW = register("item.trident.throw")
    @JvmField val TRIDENT_THUNDER = register("item.trident.thunder")
    @JvmField val TRIPWIRE_ATTACH = register("block.tripwire.attach")
    @JvmField val TRIPWIRE_CLICK_OFF = register("block.tripwire.click_off")
    @JvmField val TRIPWIRE_CLICK_ON = register("block.tripwire.click_on")
    @JvmField val TRIPWIRE_DETACH = register("block.tripwire.detach")
    @JvmField val TROPICAL_FISH_AMBIENT = register("entity.tropical_fish.ambient")
    @JvmField val TROPICAL_FISH_DEATH = register("entity.tropical_fish.death")
    @JvmField val TROPICAL_FISH_FLOP = register("entity.tropical_fish.flop")
    @JvmField val TROPICAL_FISH_HURT = register("entity.tropical_fish.hurt")
    @JvmField val TUFF_BREAK = register("block.tuff.break")
    @JvmField val TUFF_STEP = register("block.tuff.step")
    @JvmField val TUFF_PLACE = register("block.tuff.place")
    @JvmField val TUFF_HIT = register("block.tuff.hit")
    @JvmField val TUFF_FALL = register("block.tuff.fall")
    @JvmField val TURTLE_AMBIENT_LAND = register("entity.turtle.ambient_land")
    @JvmField val TURTLE_DEATH = register("entity.turtle.death")
    @JvmField val TURTLE_DEATH_BABY = register("entity.turtle.death_baby")
    @JvmField val TURTLE_EGG_BREAK = register("entity.turtle.egg_break")
    @JvmField val TURTLE_EGG_CRACK = register("entity.turtle.egg_crack")
    @JvmField val TURTLE_EGG_HATCH = register("entity.turtle.egg_hatch")
    @JvmField val TURTLE_HURT = register("entity.turtle.hurt")
    @JvmField val TURTLE_HURT_BABY = register("entity.turtle.hurt_baby")
    @JvmField val TURTLE_LAY_EGG = register("entity.turtle.lay_egg")
    @JvmField val TURTLE_SHAMBLE = register("entity.turtle.shamble")
    @JvmField val TURTLE_SHAMBLE_BABY = register("entity.turtle.shamble_baby")
    @JvmField val TURTLE_SWIM = register("entity.turtle.swim")
    @JvmField val UI_BUTTON_CLICK = register("ui.button.click")
    @JvmField val UI_LOOM_SELECT_PATTERN = register("ui.loom.select_pattern")
    @JvmField val UI_LOOM_TAKE_RESULT = register("ui.loom.take_result")
    @JvmField val UI_CARTOGRAPHY_TABLE_TAKE_RESULT = register("ui.cartography_table.take_result")
    @JvmField val UI_STONECUTTER_TAKE_RESULT = register("ui.stonecutter.take_result")
    @JvmField val UI_STONECUTTER_SELECT_RECIPE = register("ui.stonecutter.select_recipe")
    @JvmField val UI_TOAST_CHALLENGE_COMPLETE = register("ui.toast.challenge_complete")
    @JvmField val UI_TOAST_IN = register("ui.toast.in")
    @JvmField val UI_TOAST_OUT = register("ui.toast.out")
    @JvmField val VEX_AMBIENT = register("entity.vex.ambient")
    @JvmField val VEX_CHARGE = register("entity.vex.charge")
    @JvmField val VEX_DEATH = register("entity.vex.death")
    @JvmField val VEX_HURT = register("entity.vex.hurt")
    @JvmField val VILLAGER_AMBIENT = register("entity.villager.ambient")
    @JvmField val VILLAGER_CELEBRATE = register("entity.villager.celebrate")
    @JvmField val VILLAGER_DEATH = register("entity.villager.death")
    @JvmField val VILLAGER_HURT = register("entity.villager.hurt")
    @JvmField val VILLAGER_NO = register("entity.villager.no")
    @JvmField val VILLAGER_TRADE = register("entity.villager.trade")
    @JvmField val VILLAGER_YES = register("entity.villager.yes")
    @JvmField val VILLAGER_WORK_ARMORER = register("entity.villager.work_armorer")
    @JvmField val VILLAGER_WORK_BUTCHER = register("entity.villager.work_butcher")
    @JvmField val VILLAGER_WORK_CARTOGRAPHER = register("entity.villager.work_cartographer")
    @JvmField val VILLAGER_WORK_CLERIC = register("entity.villager.work_cleric")
    @JvmField val VILLAGER_WORK_FARMER = register("entity.villager.work_farmer")
    @JvmField val VILLAGER_WORK_FISHERMAN = register("entity.villager.work_fisherman")
    @JvmField val VILLAGER_WORK_FLETCHER = register("entity.villager.work_fletcher")
    @JvmField val VILLAGER_WORK_LEATHERWORKER = register("entity.villager.work_leatherworker")
    @JvmField val VILLAGER_WORK_LIBRARIAN = register("entity.villager.work_librarian")
    @JvmField val VILLAGER_WORK_MASON = register("entity.villager.work_mason")
    @JvmField val VILLAGER_WORK_SHEPHERD = register("entity.villager.work_shepherd")
    @JvmField val VILLAGER_WORK_TOOLSMITH = register("entity.villager.work_toolsmith")
    @JvmField val VILLAGER_WORK_WEAPONSMITH = register("entity.villager.work_weaponsmith")
    @JvmField val VINDICATOR_AMBIENT = register("entity.vindicator.ambient")
    @JvmField val VINDICATOR_CELEBRATE = register("entity.vindicator.celebrate")
    @JvmField val VINDICATOR_DEATH = register("entity.vindicator.death")
    @JvmField val VINDICATOR_HURT = register("entity.vindicator.hurt")
    @JvmField val VINE_BREAK = register("block.vine.break")
    @JvmField val VINE_FALL = register("block.vine.fall")
    @JvmField val VINE_HIT = register("block.vine.hit")
    @JvmField val VINE_PLACE = register("block.vine.place")
    @JvmField val VINE_STEP = register("block.vine.step")
    @JvmField val LILY_PAD_PLACE = register("block.lily_pad.place")
    @JvmField val WANDERING_TRADER_AMBIENT = register("entity.wandering_trader.ambient")
    @JvmField val WANDERING_TRADER_DEATH = register("entity.wandering_trader.death")
    @JvmField val WANDERING_TRADER_DISAPPEARED = register("entity.wandering_trader.disappeared")
    @JvmField val WANDERING_TRADER_DRINK_MILK = register("entity.wandering_trader.drink_milk")
    @JvmField val WANDERING_TRADER_DRINK_POTION = register("entity.wandering_trader.drink_potion")
    @JvmField val WANDERING_TRADER_HURT = register("entity.wandering_trader.hurt")
    @JvmField val WANDERING_TRADER_NO = register("entity.wandering_trader.no")
    @JvmField val WANDERING_TRADER_REAPPEARED = register("entity.wandering_trader.reappeared")
    @JvmField val WANDERING_TRADER_TRADE = register("entity.wandering_trader.trade")
    @JvmField val WANDERING_TRADER_YES = register("entity.wandering_trader.yes")
    @JvmField val WATER_AMBIENT = register("block.water.ambient")
    @JvmField val WEATHER_RAIN = register("weather.rain")
    @JvmField val WEATHER_RAIN_ABOVE = register("weather.rain.above")
    @JvmField val WET_GRASS_BREAK = register("block.wet_grass.break")
    @JvmField val WET_GRASS_FALL = register("block.wet_grass.fall")
    @JvmField val WET_GRASS_HIT = register("block.wet_grass.hit")
    @JvmField val WET_GRASS_PLACE = register("block.wet_grass.place")
    @JvmField val WET_GRASS_STEP = register("block.wet_grass.step")
    @JvmField val WITCH_AMBIENT = register("entity.witch.ambient")
    @JvmField val WITCH_CELEBRATE = register("entity.witch.celebrate")
    @JvmField val WITCH_DEATH = register("entity.witch.death")
    @JvmField val WITCH_DRINK = register("entity.witch.drink")
    @JvmField val WITCH_HURT = register("entity.witch.hurt")
    @JvmField val WITCH_THROW = register("entity.witch.throw")
    @JvmField val WITHER_AMBIENT = register("entity.wither.ambient")
    @JvmField val WITHER_BREAK_BLOCK = register("entity.wither.break_block")
    @JvmField val WITHER_DEATH = register("entity.wither.death")
    @JvmField val WITHER_HURT = register("entity.wither.hurt")
    @JvmField val WITHER_SHOOT = register("entity.wither.shoot")
    @JvmField val WITHER_SKELETON_AMBIENT = register("entity.wither_skeleton.ambient")
    @JvmField val WITHER_SKELETON_DEATH = register("entity.wither_skeleton.death")
    @JvmField val WITHER_SKELETON_HURT = register("entity.wither_skeleton.hurt")
    @JvmField val WITHER_SKELETON_STEP = register("entity.wither_skeleton.step")
    @JvmField val WITHER_SPAWN = register("entity.wither.spawn")
    @JvmField val WOLF_AMBIENT = register("entity.wolf.ambient")
    @JvmField val WOLF_DEATH = register("entity.wolf.death")
    @JvmField val WOLF_GROWL = register("entity.wolf.growl")
    @JvmField val WOLF_HOWL = register("entity.wolf.howl")
    @JvmField val WOLF_HURT = register("entity.wolf.hurt")
    @JvmField val WOLF_PANT = register("entity.wolf.pant")
    @JvmField val WOLF_SHAKE = register("entity.wolf.shake")
    @JvmField val WOLF_STEP = register("entity.wolf.step")
    @JvmField val WOLF_WHINE = register("entity.wolf.whine")
    @JvmField val WOODEN_DOOR_CLOSE = register("block.wooden_door.close")
    @JvmField val WOODEN_DOOR_OPEN = register("block.wooden_door.open")
    @JvmField val WOODEN_TRAPDOOR_CLOSE = register("block.wooden_trapdoor.close")
    @JvmField val WOODEN_TRAPDOOR_OPEN = register("block.wooden_trapdoor.open")
    @JvmField val WOOD_BREAK = register("block.wood.break")
    @JvmField val WOODEN_BUTTON_CLICK_OFF = register("block.wooden_button.click_off")
    @JvmField val WOODEN_BUTTON_CLICK_ON = register("block.wooden_button.click_on")
    @JvmField val WOOD_FALL = register("block.wood.fall")
    @JvmField val WOOD_HIT = register("block.wood.hit")
    @JvmField val WOOD_PLACE = register("block.wood.place")
    @JvmField val WOODEN_PRESSURE_PLATE_CLICK_OFF = register("block.wooden_pressure_plate.click_off")
    @JvmField val WOODEN_PRESSURE_PLATE_CLICK_ON = register("block.wooden_pressure_plate.click_on")
    @JvmField val WOOD_STEP = register("block.wood.step")
    @JvmField val WOOL_BREAK = register("block.wool.break")
    @JvmField val WOOL_FALL = register("block.wool.fall")
    @JvmField val WOOL_HIT = register("block.wool.hit")
    @JvmField val WOOL_PLACE = register("block.wool.place")
    @JvmField val WOOL_STEP = register("block.wool.step")
    @JvmField val ZOGLIN_AMBIENT = register("entity.zoglin.ambient")
    @JvmField val ZOGLIN_ANGRY = register("entity.zoglin.angry")
    @JvmField val ZOGLIN_ATTACK = register("entity.zoglin.attack")
    @JvmField val ZOGLIN_DEATH = register("entity.zoglin.death")
    @JvmField val ZOGLIN_HURT = register("entity.zoglin.hurt")
    @JvmField val ZOGLIN_STEP = register("entity.zoglin.step")
    @JvmField val ZOMBIE_AMBIENT = register("entity.zombie.ambient")
    @JvmField val ZOMBIE_ATTACK_WOODEN_DOOR = register("entity.zombie.attack_wooden_door")
    @JvmField val ZOMBIE_ATTACK_IRON_DOOR = register("entity.zombie.attack_iron_door")
    @JvmField val ZOMBIE_BREAK_WOODEN_DOOR = register("entity.zombie.break_wooden_door")
    @JvmField val ZOMBIE_CONVERTED_TO_DROWNED = register("entity.zombie.converted_to_drowned")
    @JvmField val ZOMBIE_DEATH = register("entity.zombie.death")
    @JvmField val ZOMBIE_DESTROY_EGG = register("entity.zombie.destroy_egg")
    @JvmField val ZOMBIE_HORSE_AMBIENT = register("entity.zombie_horse.ambient")
    @JvmField val ZOMBIE_HORSE_DEATH = register("entity.zombie_horse.death")
    @JvmField val ZOMBIE_HORSE_HURT = register("entity.zombie_horse.hurt")
    @JvmField val ZOMBIE_HURT = register("entity.zombie.hurt")
    @JvmField val ZOMBIE_INFECT = register("entity.zombie.infect")
    @JvmField val ZOMBIFIED_PIGLIN_AMBIENT = register("entity.zombified_piglin.ambient")
    @JvmField val ZOMBIFIED_PIGLIN_ANGRY = register("entity.zombified_piglin.angry")
    @JvmField val ZOMBIFIED_PIGLIN_DEATH = register("entity.zombified_piglin.death")
    @JvmField val ZOMBIFIED_PIGLIN_HURT = register("entity.zombified_piglin.hurt")
    @JvmField val ZOMBIE_STEP = register("entity.zombie.step")
    @JvmField val ZOMBIE_VILLAGER_AMBIENT = register("entity.zombie_villager.ambient")
    @JvmField val ZOMBIE_VILLAGER_CONVERTED = register("entity.zombie_villager.converted")
    @JvmField val ZOMBIE_VILLAGER_CURE = register("entity.zombie_villager.cure")
    @JvmField val ZOMBIE_VILLAGER_DEATH = register("entity.zombie_villager.death")
    @JvmField val ZOMBIE_VILLAGER_HURT = register("entity.zombie_villager.hurt")
    @JvmField val ZOMBIE_VILLAGER_STEP = register("entity.zombie_villager.step")

    // @formatter:on
    private fun register(key: String): SoundEvent = Registries.register(Registries.SOUND_EVENT, key, SoundEvent(Key.key(key)))
}
