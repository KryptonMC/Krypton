/*
 * This file is part of the Krypton API, licensed under the MIT license.
 *
 * Copyright (C) 2021 KryptonMC and the contributors to the Krypton project.
 *
 * This project is licensed under the terms of the MIT license.
 * For more details, please reference the LICENSE file in the api top-level directory.
 */
package org.kryptonmc.api.item

import net.kyori.adventure.key.Key
import org.kryptonmc.api.registry.Registries

/**
 * An object containing all built-in item types.
 */
@Suppress("LargeClass")
object ItemTypes {

    // @formatter:off
    @JvmField val AIR = register("air")
    @JvmField val STONE = register("stone")
    @JvmField val GRANITE = register("granite")
    @JvmField val POLISHED_GRANITE = register("polished_granite")
    @JvmField val DIORITE = register("diorite")
    @JvmField val POLISHED_DIORITE = register("polished_diorite")
    @JvmField val ANDESITE = register("andesite")
    @JvmField val POLISHED_ANDESITE = register("polished_andesite")
    @JvmField val DEEPSLATE = register("deepslate")
    @JvmField val COBBLED_DEEPSLATE = register("cobbled_deepslate")
    @JvmField val POLISHED_DEEPSLATE = register("polished_deepslate")
    @JvmField val CALCITE = register("calcite")
    @JvmField val TUFF = register("tuff")
    @JvmField val DRIPSTONE_BLOCK = register("dripstone_block")
    @JvmField val GRASS_BLOCK = register("grass_block")
    @JvmField val DIRT = register("dirt")
    @JvmField val COARSE_DIRT = register("coarse_dirt")
    @JvmField val PODZOL = register("podzol")
    @JvmField val ROOTED_DIRT = register("rooted_dirt")
    @JvmField val CRIMSON_NYLIUM = register("crimson_nylium")
    @JvmField val WARPED_NYLIUM = register("warped_nylium")
    @JvmField val COBBLESTONE = register("cobblestone")
    @JvmField val OAK_PLANKS = register("oak_planks")
    @JvmField val SPRUCE_PLANKS = register("spruce_planks")
    @JvmField val BIRCH_PLANKS = register("birch_planks")
    @JvmField val JUNGLE_PLANKS = register("jungle_planks")
    @JvmField val ACACIA_PLANKS = register("acacia_planks")
    @JvmField val DARK_OAK_PLANKS = register("dark_oak_planks")
    @JvmField val CRIMSON_PLANKS = register("crimson_planks")
    @JvmField val WARPED_PLANKS = register("warped_planks")
    @JvmField val OAK_SAPLING = register("oak_sapling")
    @JvmField val SPRUCE_SAPLING = register("spruce_sapling")
    @JvmField val BIRCH_SAPLING = register("birch_sapling")
    @JvmField val JUNGLE_SAPLING = register("jungle_sapling")
    @JvmField val ACACIA_SAPLING = register("acacia_sapling")
    @JvmField val DARK_OAK_SAPLING = register("dark_oak_sapling")
    @JvmField val BEDROCK = register("bedrock")
    @JvmField val SAND = register("sand")
    @JvmField val RED_SAND = register("red_sand")
    @JvmField val GRAVEL = register("gravel")
    @JvmField val COAL_ORE = register("coal_ore")
    @JvmField val DEEPSLATE_COAL_ORE = register("deepslate_coal_ore")
    @JvmField val IRON_ORE = register("iron_ore")
    @JvmField val DEEPSLATE_IRON_ORE = register("deepslate_iron_ore")
    @JvmField val COPPER_ORE = register("copper_ore")
    @JvmField val DEEPSLATE_COPPER_ORE = register("deepslate_copper_ore")
    @JvmField val GOLD_ORE = register("gold_ore")
    @JvmField val DEEPSLATE_GOLD_ORE = register("deepslate_gold_ore")
    @JvmField val REDSTONE_ORE = register("redstone_ore")
    @JvmField val DEEPSLATE_REDSTONE_ORE = register("deepslate_redstone_ore")
    @JvmField val EMERALD_ORE = register("emerald_ore")
    @JvmField val DEEPSLATE_EMERALD_ORE = register("deepslate_emerald_ore")
    @JvmField val LAPIS_ORE = register("lapis_ore")
    @JvmField val DEEPSLATE_LAPIS_ORE = register("deepslate_lapis_ore")
    @JvmField val DIAMOND_ORE = register("diamond_ore")
    @JvmField val DEEPSLATE_DIAMOND_ORE = register("deepslate_diamond_ore")
    @JvmField val NETHER_GOLD_ORE = register("nether_gold_ore")
    @JvmField val NETHER_QUARTZ_ORE = register("nether_quartz_ore")
    @JvmField val ANCIENT_DEBRIS = register("ancient_debris", isFireResistant = true)
    @JvmField val RAW_IRON_BLOCK = register("raw_iron_block")
    @JvmField val RAW_COPPER_BLOCK = register("raw_copper_block")
    @JvmField val RAW_GOLD_BLOCK = register("raw_gold_block")
    @JvmField val AMETHYST_BLOCK = register("amethyst_block")
    @JvmField val BUDDING_AMETHYST = register("budding_amethyst")
    @JvmField val IRON_BLOCK = register("iron_block")
    @JvmField val COPPER_BLOCK = register("copper_block")
    @JvmField val GOLD_BLOCK = register("gold_block")
    @JvmField val DIAMOND_BLOCK = register("diamond_block")
    @JvmField val NETHERITE_BLOCK = register("netherite_block", isFireResistant = true)
    @JvmField val EXPOSED_COPPER = register("exposed_copper")
    @JvmField val WEATHERED_COPPER = register("weathered_copper")
    @JvmField val OXIDIZED_COPPER = register("oxidized_copper")
    @JvmField val CUT_COPPER = register("cut_copper")
    @JvmField val EXPOSED_CUT_COPPER = register("exposed_cut_copper")
    @JvmField val WEATHERED_CUT_COPPER = register("weathered_cut_copper")
    @JvmField val OXIDIZED_CUT_COPPER = register("oxidized_cut_copper")
    @JvmField val CUT_COPPER_STAIRS = register("cut_copper_stairs")
    @JvmField val EXPOSED_CUT_COPPER_STAIRS = register("exposed_cut_copper_stairs")
    @JvmField val WEATHERED_CUT_COPPER_STAIRS = register("weathered_cut_copper_stairs")
    @JvmField val OXIDIZED_CUT_COPPER_STAIRS = register("oxidized_cut_copper_stairs")
    @JvmField val CUT_COPPER_SLAB = register("cut_copper_slab")
    @JvmField val EXPOSED_CUT_COPPER_SLAB = register("exposed_cut_copper_slab")
    @JvmField val WEATHERED_CUT_COPPER_SLAB = register("weathered_cut_copper_slab")
    @JvmField val OXIDIZED_CUT_COPPER_SLAB = register("oxidized_cut_copper_slab")
    @JvmField val WAXED_COPPER_BLOCK = register("waxed_copper_block")
    @JvmField val WAXED_EXPOSED_COPPER = register("waxed_exposed_copper")
    @JvmField val WAXED_WEATHERED_COPPER = register("waxed_weathered_copper")
    @JvmField val WAXED_OXIDIZED_COPPER = register("waxed_oxidized_copper")
    @JvmField val WAXED_CUT_COPPER = register("waxed_cut_copper")
    @JvmField val WAXED_EXPOSED_CUT_COPPER = register("waxed_exposed_cut_copper")
    @JvmField val WAXED_WEATHERED_CUT_COPPER = register("waxed_weathered_cut_copper")
    @JvmField val WAXED_OXIDIZED_CUT_COPPER = register("waxed_oxidized_cut_copper")
    @JvmField val WAXED_CUT_COPPER_STAIRS = register("waxed_cut_copper_stairs")
    @JvmField val WAXED_EXPOSED_CUT_COPPER_STAIRS = register("waxed_exposed_cut_copper_stairs")
    @JvmField val WAXED_WEATHERED_CUT_COPPER_STAIRS = register("waxed_weathered_cut_copper_stairs")
    @JvmField val WAXED_OXIDIZED_CUT_COPPER_STAIRS = register("waxed_oxidized_cut_copper_stairs")
    @JvmField val WAXED_CUT_COPPER_SLAB = register("waxed_cut_copper_slab")
    @JvmField val WAXED_EXPOSED_CUT_COPPER_SLAB = register("waxed_exposed_cut_copper_slab")
    @JvmField val WAXED_WEATHERED_CUT_COPPER_SLAB = register("waxed_weathered_cut_copper_slab")
    @JvmField val WAXED_OXIDIZED_CUT_COPPER_SLAB = register("waxed_oxidized_cut_copper_slab")
    @JvmField val OAK_LOG = register("oak_log")
    @JvmField val SPRUCE_LOG = register("spruce_log")
    @JvmField val BIRCH_LOG = register("birch_log")
    @JvmField val JUNGLE_LOG = register("jungle_log")
    @JvmField val ACACIA_LOG = register("acacia_log")
    @JvmField val DARK_OAK_LOG = register("dark_oak_log")
    @JvmField val CRIMSON_STEM = register("crimson_stem")
    @JvmField val WARPED_STEM = register("warped_stem")
    @JvmField val STRIPPED_OAK_LOG = register("stripped_oak_log")
    @JvmField val STRIPPED_SPRUCE_LOG = register("stripped_spruce_log")
    @JvmField val STRIPPED_BIRCH_LOG = register("stripped_birch_log")
    @JvmField val STRIPPED_JUNGLE_LOG = register("stripped_jungle_log")
    @JvmField val STRIPPED_ACACIA_LOG = register("stripped_acacia_log")
    @JvmField val STRIPPED_DARK_OAK_LOG = register("stripped_dark_oak_log")
    @JvmField val STRIPPED_CRIMSON_STEM = register("stripped_crimson_stem")
    @JvmField val STRIPPED_WARPED_STEM = register("stripped_warped_stem")
    @JvmField val STRIPPED_OAK_WOOD = register("stripped_oak_wood")
    @JvmField val STRIPPED_SPRUCE_WOOD = register("stripped_spruce_wood")
    @JvmField val STRIPPED_BIRCH_WOOD = register("stripped_birch_wood")
    @JvmField val STRIPPED_JUNGLE_WOOD = register("stripped_jungle_wood")
    @JvmField val STRIPPED_ACACIA_WOOD = register("stripped_acacia_wood")
    @JvmField val STRIPPED_DARK_OAK_WOOD = register("stripped_dark_oak_wood")
    @JvmField val STRIPPED_CRIMSON_HYPHAE = register("stripped_crimson_hyphae")
    @JvmField val STRIPPED_WARPED_HYPHAE = register("stripped_warped_hyphae")
    @JvmField val OAK_WOOD = register("oak_wood")
    @JvmField val SPRUCE_WOOD = register("spruce_wood")
    @JvmField val BIRCH_WOOD = register("birch_wood")
    @JvmField val JUNGLE_WOOD = register("jungle_wood")
    @JvmField val ACACIA_WOOD = register("acacia_wood")
    @JvmField val DARK_OAK_WOOD = register("dark_oak_wood")
    @JvmField val CRIMSON_HYPHAE = register("crimson_hyphae")
    @JvmField val WARPED_HYPHAE = register("warped_hyphae")
    @JvmField val OAK_LEAVES = register("oak_leaves")
    @JvmField val SPRUCE_LEAVES = register("spruce_leaves")
    @JvmField val BIRCH_LEAVES = register("birch_leaves")
    @JvmField val JUNGLE_LEAVES = register("jungle_leaves")
    @JvmField val ACACIA_LEAVES = register("acacia_leaves")
    @JvmField val DARK_OAK_LEAVES = register("dark_oak_leaves")
    @JvmField val AZALEA_LEAVES = register("azalea_leaves")
    @JvmField val FLOWERING_AZALEA_LEAVES = register("flowering_azalea_leaves")
    @JvmField val SPONGE = register("sponge")
    @JvmField val WET_SPONGE = register("wet_sponge")
    @JvmField val GLASS = register("glass")
    @JvmField val TINTED_GLASS = register("tinted_glass")
    @JvmField val LAPIS_BLOCK = register("lapis_block")
    @JvmField val SANDSTONE = register("sandstone")
    @JvmField val CHISELED_SANDSTONE = register("chiseled_sandstone")
    @JvmField val CUT_SANDSTONE = register("cut_sandstone")
    @JvmField val COBWEB = register("cobweb")
    @JvmField val GRASS = register("grass")
    @JvmField val FERN = register("fern")
    @JvmField val AZALEA = register("azalea")
    @JvmField val FLOWERING_AZALEA = register("flowering_azalea")
    @JvmField val DEAD_BUSH = register("dead_bush")
    @JvmField val SEAGRASS = register("seagrass")
    @JvmField val SEA_PICKLE = register("sea_pickle")
    @JvmField val WHITE_WOOL = register("white_wool")
    @JvmField val ORANGE_WOOL = register("orange_wool")
    @JvmField val MAGENTA_WOOL = register("magenta_wool")
    @JvmField val LIGHT_BLUE_WOOL = register("light_blue_wool")
    @JvmField val YELLOW_WOOL = register("yellow_wool")
    @JvmField val LIME_WOOL = register("lime_wool")
    @JvmField val PINK_WOOL = register("pink_wool")
    @JvmField val GRAY_WOOL = register("gray_wool")
    @JvmField val LIGHT_GRAY_WOOL = register("light_gray_wool")
    @JvmField val CYAN_WOOL = register("cyan_wool")
    @JvmField val PURPLE_WOOL = register("purple_wool")
    @JvmField val BLUE_WOOL = register("blue_wool")
    @JvmField val BROWN_WOOL = register("brown_wool")
    @JvmField val GREEN_WOOL = register("green_wool")
    @JvmField val RED_WOOL = register("red_wool")
    @JvmField val BLACK_WOOL = register("black_wool")
    @JvmField val DANDELION = register("dandelion")
    @JvmField val POPPY = register("poppy")
    @JvmField val BLUE_ORCHID = register("blue_orchid")
    @JvmField val ALLIUM = register("allium")
    @JvmField val AZURE_BLUET = register("azure_bluet")
    @JvmField val RED_TULIP = register("red_tulip")
    @JvmField val ORANGE_TULIP = register("orange_tulip")
    @JvmField val WHITE_TULIP = register("white_tulip")
    @JvmField val PINK_TULIP = register("pink_tulip")
    @JvmField val OXEYE_DAISY = register("oxeye_daisy")
    @JvmField val CORNFLOWER = register("cornflower")
    @JvmField val LILY_OF_THE_VALLEY = register("lily_of_the_valley")
    @JvmField val WITHER_ROSE = register("wither_rose")
    @JvmField val SPORE_BLOSSOM = register("spore_blossom")
    @JvmField val BROWN_MUSHROOM = register("brown_mushroom")
    @JvmField val RED_MUSHROOM = register("red_mushroom")
    @JvmField val CRIMSON_FUNGUS = register("crimson_fungus")
    @JvmField val WARPED_FUNGUS = register("warped_fungus")
    @JvmField val CRIMSON_ROOTS = register("crimson_roots")
    @JvmField val WARPED_ROOTS = register("warped_roots")
    @JvmField val NETHER_SPROUTS = register("nether_sprouts")
    @JvmField val WEEPING_VINES = register("weeping_vines")
    @JvmField val TWISTING_VINES = register("twisting_vines")
    @JvmField val SUGAR_CANE = register("sugar_cane")
    @JvmField val KELP = register("kelp")
    @JvmField val MOSS_CARPET = register("moss_carpet")
    @JvmField val MOSS_BLOCK = register("moss_block")
    @JvmField val HANGING_ROOTS = register("hanging_roots")
    @JvmField val BIG_DRIPLEAF = register("big_dripleaf")
    @JvmField val SMALL_DRIPLEAF = register("small_dripleaf")
    @JvmField val BAMBOO = register("bamboo")
    @JvmField val OAK_SLAB = register("oak_slab")
    @JvmField val SPRUCE_SLAB = register("spruce_slab")
    @JvmField val BIRCH_SLAB = register("birch_slab")
    @JvmField val JUNGLE_SLAB = register("jungle_slab")
    @JvmField val ACACIA_SLAB = register("acacia_slab")
    @JvmField val DARK_OAK_SLAB = register("dark_oak_slab")
    @JvmField val CRIMSON_SLAB = register("crimson_slab")
    @JvmField val WARPED_SLAB = register("warped_slab")
    @JvmField val STONE_SLAB = register("stone_slab")
    @JvmField val SMOOTH_STONE_SLAB = register("smooth_stone_slab")
    @JvmField val SANDSTONE_SLAB = register("sandstone_slab")
    @JvmField val CUT_SANDSTONE_SLAB = register("cut_sandstone_slab")
    @JvmField val PETRIFIED_OAK_SLAB = register("petrified_oak_slab")
    @JvmField val COBBLESTONE_SLAB = register("cobblestone_slab")
    @JvmField val BRICK_SLAB = register("brick_slab")
    @JvmField val STONE_BRICK_SLAB = register("stone_brick_slab")
    @JvmField val NETHER_BRICK_SLAB = register("nether_brick_slab")
    @JvmField val QUARTZ_SLAB = register("quartz_slab")
    @JvmField val RED_SANDSTONE_SLAB = register("red_sandstone_slab")
    @JvmField val CUT_RED_SANDSTONE_SLAB = register("cut_red_sandstone_slab")
    @JvmField val PURPUR_SLAB = register("purpur_slab")
    @JvmField val PRISMARINE_SLAB = register("prismarine_slab")
    @JvmField val PRISMARINE_BRICK_SLAB = register("prismarine_brick_slab")
    @JvmField val DARK_PRISMARINE_SLAB = register("dark_prismarine_slab")
    @JvmField val SMOOTH_QUARTZ = register("smooth_quartz")
    @JvmField val SMOOTH_RED_SANDSTONE = register("smooth_red_sandstone")
    @JvmField val SMOOTH_SANDSTONE = register("smooth_sandstone")
    @JvmField val SMOOTH_STONE = register("smooth_stone")
    @JvmField val BRICKS = register("bricks")
    @JvmField val BOOKSHELF = register("bookshelf")
    @JvmField val MOSSY_COBBLESTONE = register("mossy_cobblestone")
    @JvmField val OBSIDIAN = register("obsidian")
    @JvmField val TORCH = register("torch")
    @JvmField val END_ROD = register("end_rod")
    @JvmField val CHORUS_PLANT = register("chorus_plant")
    @JvmField val CHORUS_FLOWER = register("chorus_flower")
    @JvmField val PURPUR_BLOCK = register("purpur_block")
    @JvmField val PURPUR_PILLAR = register("purpur_pillar")
    @JvmField val PURPUR_STAIRS = register("purpur_stairs")
    @JvmField val SPAWNER = register("spawner", ItemRarity.EPIC)
    @JvmField val OAK_STAIRS = register("oak_stairs")
    @JvmField val CHEST = register("chest")
    @JvmField val CRAFTING_TABLE = register("crafting_table")
    @JvmField val FARMLAND = register("farmland")
    @JvmField val FURNACE = register("furnace")
    @JvmField val LADDER = register("ladder")
    @JvmField val COBBLESTONE_STAIRS = register("cobblestone_stairs")
    @JvmField val SNOW = register("snow")
    @JvmField val ICE = register("ice")
    @JvmField val SNOW_BLOCK = register("snow_block")
    @JvmField val CACTUS = register("cactus")
    @JvmField val CLAY = register("clay")
    @JvmField val JUKEBOX = register("jukebox")
    @JvmField val OAK_FENCE = register("oak_fence")
    @JvmField val SPRUCE_FENCE = register("spruce_fence")
    @JvmField val BIRCH_FENCE = register("birch_fence")
    @JvmField val JUNGLE_FENCE = register("jungle_fence")
    @JvmField val ACACIA_FENCE = register("acacia_fence")
    @JvmField val DARK_OAK_FENCE = register("dark_oak_fence")
    @JvmField val CRIMSON_FENCE = register("crimson_fence")
    @JvmField val WARPED_FENCE = register("warped_fence")
    @JvmField val PUMPKIN = register("pumpkin")
    @JvmField val CARVED_PUMPKIN = register("carved_pumpkin")
    @JvmField val JACK_O_LANTERN = register("jack_o_lantern")
    @JvmField val NETHERRACK = register("netherrack")
    @JvmField val SOUL_SAND = register("soul_sand")
    @JvmField val SOUL_SOIL = register("soul_soil")
    @JvmField val BASALT = register("basalt")
    @JvmField val POLISHED_BASALT = register("polished_basalt")
    @JvmField val SMOOTH_BASALT = register("smooth_basalt")
    @JvmField val SOUL_TORCH = register("soul_torch")
    @JvmField val GLOWSTONE = register("glowstone")
    @JvmField val INFESTED_STONE = register("infested_stone")
    @JvmField val INFESTED_COBBLESTONE = register("infested_cobblestone")
    @JvmField val INFESTED_STONE_BRICKS = register("infested_stone_bricks")
    @JvmField val INFESTED_MOSSY_STONE_BRICKS = register("infested_mossy_stone_bricks")
    @JvmField val INFESTED_CRACKED_STONE_BRICKS = register("infested_cracked_stone_bricks")
    @JvmField val INFESTED_CHISELED_STONE_BRICKS = register("infested_chiseled_stone_bricks")
    @JvmField val INFESTED_DEEPSLATE = register("infested_deepslate")
    @JvmField val STONE_BRICKS = register("stone_bricks")
    @JvmField val MOSSY_STONE_BRICKS = register("mossy_stone_bricks")
    @JvmField val CRACKED_STONE_BRICKS = register("cracked_stone_bricks")
    @JvmField val CHISELED_STONE_BRICKS = register("chiseled_stone_bricks")
    @JvmField val DEEPSLATE_BRICKS = register("deepslate_bricks")
    @JvmField val CRACKED_DEEPSLATE_BRICKS = register("cracked_deepslate_bricks")
    @JvmField val DEEPSLATE_TILES = register("deepslate_tiles")
    @JvmField val CRACKED_DEEPSLATE_TILES = register("cracked_deepslate_tiles")
    @JvmField val CHISELED_DEEPSLATE = register("chiseled_deepslate")
    @JvmField val BROWN_MUSHROOM_BLOCK = register("brown_mushroom_block")
    @JvmField val RED_MUSHROOM_BLOCK = register("red_mushroom_block")
    @JvmField val MUSHROOM_STEM = register("mushroom_stem")
    @JvmField val IRON_BARS = register("iron_bars")
    @JvmField val CHAIN = register("chain")
    @JvmField val GLASS_PANE = register("glass_pane")
    @JvmField val MELON = register("melon")
    @JvmField val VINE = register("vine")
    @JvmField val GLOW_LICHEN = register("glow_lichen")
    @JvmField val BRICK_STAIRS = register("brick_stairs")
    @JvmField val STONE_BRICK_STAIRS = register("stone_brick_stairs")
    @JvmField val MYCELIUM = register("mycelium")
    @JvmField val LILY_PAD = register("lily_pad")
    @JvmField val NETHER_BRICKS = register("nether_bricks")
    @JvmField val CRACKED_NETHER_BRICKS = register("cracked_nether_bricks")
    @JvmField val CHISELED_NETHER_BRICKS = register("chiseled_nether_bricks")
    @JvmField val NETHER_BRICK_FENCE = register("nether_brick_fence")
    @JvmField val NETHER_BRICK_STAIRS = register("nether_brick_stairs")
    @JvmField val ENCHANTING_TABLE = register("enchanting_table")
    @JvmField val END_PORTAL_FRAME = register("end_portal_frame")
    @JvmField val END_STONE = register("end_stone")
    @JvmField val END_STONE_BRICKS = register("end_stone_bricks")
    @JvmField val DRAGON_EGG = register("dragon_egg", ItemRarity.EPIC)
    @JvmField val SANDSTONE_STAIRS = register("sandstone_stairs")
    @JvmField val ENDER_CHEST = register("ender_chest")
    @JvmField val EMERALD_BLOCK = register("emerald_block")
    @JvmField val SPRUCE_STAIRS = register("spruce_stairs")
    @JvmField val BIRCH_STAIRS = register("birch_stairs")
    @JvmField val JUNGLE_STAIRS = register("jungle_stairs")
    @JvmField val CRIMSON_STAIRS = register("crimson_stairs")
    @JvmField val WARPED_STAIRS = register("warped_stairs")
    @JvmField val COMMAND_BLOCK = register("command_block", ItemRarity.EPIC)
    @JvmField val BEACON = register("beacon", ItemRarity.RARE)
    @JvmField val COBBLESTONE_WALL = register("cobblestone_wall")
    @JvmField val MOSSY_COBBLESTONE_WALL = register("mossy_cobblestone_wall")
    @JvmField val BRICK_WALL = register("brick_wall")
    @JvmField val PRISMARINE_WALL = register("prismarine_wall")
    @JvmField val RED_SANDSTONE_WALL = register("red_sandstone_wall")
    @JvmField val MOSSY_STONE_BRICK_WALL = register("mossy_stone_brick_wall")
    @JvmField val GRANITE_WALL = register("granite_wall")
    @JvmField val STONE_BRICK_WALL = register("stone_brick_wall")
    @JvmField val NETHER_BRICK_WALL = register("nether_brick_wall")
    @JvmField val ANDESITE_WALL = register("andesite_wall")
    @JvmField val RED_NETHER_BRICK_WALL = register("red_nether_brick_wall")
    @JvmField val SANDSTONE_WALL = register("sandstone_wall")
    @JvmField val END_STONE_BRICK_WALL = register("end_stone_brick_wall")
    @JvmField val DIORITE_WALL = register("diorite_wall")
    @JvmField val BLACKSTONE_WALL = register("blackstone_wall")
    @JvmField val POLISHED_BLACKSTONE_WALL = register("polished_blackstone_wall")
    @JvmField val POLISHED_BLACKSTONE_BRICK_WALL = register("polished_blackstone_brick_wall")
    @JvmField val COBBLED_DEEPSLATE_WALL = register("cobbled_deepslate_wall")
    @JvmField val POLISHED_DEEPSLATE_WALL = register("polished_deepslate_wall")
    @JvmField val DEEPSLATE_BRICK_WALL = register("deepslate_brick_wall")
    @JvmField val DEEPSLATE_TILE_WALL = register("deepslate_tile_wall")
    @JvmField val ANVIL = register("anvil")
    @JvmField val CHIPPED_ANVIL = register("chipped_anvil")
    @JvmField val DAMAGED_ANVIL = register("damaged_anvil")
    @JvmField val CHISELED_QUARTZ_BLOCK = register("chiseled_quartz_block")
    @JvmField val QUARTZ_BLOCK = register("quartz_block")
    @JvmField val QUARTZ_BRICKS = register("quartz_bricks")
    @JvmField val QUARTZ_PILLAR = register("quartz_pillar")
    @JvmField val QUARTZ_STAIRS = register("quartz_stairs")
    @JvmField val WHITE_TERRACOTTA = register("white_terracotta")
    @JvmField val ORANGE_TERRACOTTA = register("orange_terracotta")
    @JvmField val MAGENTA_TERRACOTTA = register("magenta_terracotta")
    @JvmField val LIGHT_BLUE_TERRACOTTA = register("light_blue_terracotta")
    @JvmField val YELLOW_TERRACOTTA = register("yellow_terracotta")
    @JvmField val LIME_TERRACOTTA = register("lime_terracotta")
    @JvmField val PINK_TERRACOTTA = register("pink_terracotta")
    @JvmField val GRAY_TERRACOTTA = register("gray_terracotta")
    @JvmField val LIGHT_GRAY_TERRACOTTA = register("light_gray_terracotta")
    @JvmField val CYAN_TERRACOTTA = register("cyan_terracotta")
    @JvmField val PURPLE_TERRACOTTA = register("purple_terracotta")
    @JvmField val BLUE_TERRACOTTA = register("blue_terracotta")
    @JvmField val BROWN_TERRACOTTA = register("brown_terracotta")
    @JvmField val GREEN_TERRACOTTA = register("green_terracotta")
    @JvmField val RED_TERRACOTTA = register("red_terracotta")
    @JvmField val BLACK_TERRACOTTA = register("black_terracotta")
    @JvmField val BARRIER = register("barrier", ItemRarity.EPIC)
    @JvmField val LIGHT = register("light", ItemRarity.EPIC)
    @JvmField val HAY_BLOCK = register("hay_block")
    @JvmField val WHITE_CARPET = register("white_carpet")
    @JvmField val ORANGE_CARPET = register("orange_carpet")
    @JvmField val MAGENTA_CARPET = register("magenta_carpet")
    @JvmField val LIGHT_BLUE_CARPET = register("light_blue_carpet")
    @JvmField val YELLOW_CARPET = register("yellow_carpet")
    @JvmField val LIME_CARPET = register("lime_carpet")
    @JvmField val PINK_CARPET = register("pink_carpet")
    @JvmField val GRAY_CARPET = register("gray_carpet")
    @JvmField val LIGHT_GRAY_CARPET = register("light_gray_carpet")
    @JvmField val CYAN_CARPET = register("cyan_carpet")
    @JvmField val PURPLE_CARPET = register("purple_carpet")
    @JvmField val BLUE_CARPET = register("blue_carpet")
    @JvmField val BROWN_CARPET = register("brown_carpet")
    @JvmField val GREEN_CARPET = register("green_carpet")
    @JvmField val RED_CARPET = register("red_carpet")
    @JvmField val BLACK_CARPET = register("black_carpet")
    @JvmField val TERRACOTTA = register("terracotta")
    @JvmField val PACKED_ICE = register("packed_ice")
    @JvmField val ACACIA_STAIRS = register("acacia_stairs")
    @JvmField val DARK_OAK_STAIRS = register("dark_oak_stairs")
    @JvmField val DIRT_PATH = register("dirt_path")
    @JvmField val SUNFLOWER = register("sunflower")
    @JvmField val LILAC = register("lilac")
    @JvmField val ROSE_BUSH = register("rose_bush")
    @JvmField val PEONY = register("peony")
    @JvmField val TALL_GRASS = register("tall_grass")
    @JvmField val LARGE_FERN = register("large_fern")
    @JvmField val WHITE_STAINED_GLASS = register("white_stained_glass")
    @JvmField val ORANGE_STAINED_GLASS = register("orange_stained_glass")
    @JvmField val MAGENTA_STAINED_GLASS = register("magenta_stained_glass")
    @JvmField val LIGHT_BLUE_STAINED_GLASS = register("light_blue_stained_glass")
    @JvmField val YELLOW_STAINED_GLASS = register("yellow_stained_glass")
    @JvmField val LIME_STAINED_GLASS = register("lime_stained_glass")
    @JvmField val PINK_STAINED_GLASS = register("pink_stained_glass")
    @JvmField val GRAY_STAINED_GLASS = register("gray_stained_glass")
    @JvmField val LIGHT_GRAY_STAINED_GLASS = register("light_gray_stained_glass")
    @JvmField val CYAN_STAINED_GLASS = register("cyan_stained_glass")
    @JvmField val PURPLE_STAINED_GLASS = register("purple_stained_glass")
    @JvmField val BLUE_STAINED_GLASS = register("blue_stained_glass")
    @JvmField val BROWN_STAINED_GLASS = register("brown_stained_glass")
    @JvmField val GREEN_STAINED_GLASS = register("green_stained_glass")
    @JvmField val RED_STAINED_GLASS = register("red_stained_glass")
    @JvmField val BLACK_STAINED_GLASS = register("black_stained_glass")
    @JvmField val WHITE_STAINED_GLASS_PANE = register("white_stained_glass_pane")
    @JvmField val ORANGE_STAINED_GLASS_PANE = register("orange_stained_glass_pane")
    @JvmField val MAGENTA_STAINED_GLASS_PANE = register("magenta_stained_glass_pane")
    @JvmField val LIGHT_BLUE_STAINED_GLASS_PANE = register("light_blue_stained_glass_pane")
    @JvmField val YELLOW_STAINED_GLASS_PANE = register("yellow_stained_glass_pane")
    @JvmField val LIME_STAINED_GLASS_PANE = register("lime_stained_glass_pane")
    @JvmField val PINK_STAINED_GLASS_PANE = register("pink_stained_glass_pane")
    @JvmField val GRAY_STAINED_GLASS_PANE = register("gray_stained_glass_pane")
    @JvmField val LIGHT_GRAY_STAINED_GLASS_PANE = register("light_gray_stained_glass_pane")
    @JvmField val CYAN_STAINED_GLASS_PANE = register("cyan_stained_glass_pane")
    @JvmField val PURPLE_STAINED_GLASS_PANE = register("purple_stained_glass_pane")
    @JvmField val BLUE_STAINED_GLASS_PANE = register("blue_stained_glass_pane")
    @JvmField val BROWN_STAINED_GLASS_PANE = register("brown_stained_glass_pane")
    @JvmField val GREEN_STAINED_GLASS_PANE = register("green_stained_glass_pane")
    @JvmField val RED_STAINED_GLASS_PANE = register("red_stained_glass_pane")
    @JvmField val BLACK_STAINED_GLASS_PANE = register("black_stained_glass_pane")
    @JvmField val PRISMARINE = register("prismarine")
    @JvmField val PRISMARINE_BRICKS = register("prismarine_bricks")
    @JvmField val DARK_PRISMARINE = register("dark_prismarine")
    @JvmField val PRISMARINE_STAIRS = register("prismarine_stairs")
    @JvmField val PRISMARINE_BRICK_STAIRS = register("prismarine_brick_stairs")
    @JvmField val DARK_PRISMARINE_STAIRS = register("dark_prismarine_stairs")
    @JvmField val SEA_LANTERN = register("sea_lantern")
    @JvmField val RED_SANDSTONE = register("red_sandstone")
    @JvmField val CHISELED_RED_SANDSTONE = register("chiseled_red_sandstone")
    @JvmField val CUT_RED_SANDSTONE = register("cut_red_sandstone")
    @JvmField val RED_SANDSTONE_STAIRS = register("red_sandstone_stairs")
    @JvmField val REPEATING_COMMAND_BLOCK = register("repeating_command_block", ItemRarity.EPIC)
    @JvmField val CHAIN_COMMAND_BLOCK = register("chain_command_block", ItemRarity.EPIC)
    @JvmField val MAGMA_BLOCK = register("magma_block")
    @JvmField val NETHER_WART_BLOCK = register("nether_wart_block")
    @JvmField val WARPED_WART_BLOCK = register("warped_wart_block")
    @JvmField val RED_NETHER_BRICKS = register("red_nether_bricks")
    @JvmField val BONE_BLOCK = register("bone_block")
    @JvmField val STRUCTURE_VOID = register("structure_void", ItemRarity.EPIC)
    @JvmField val SHULKER_BOX = register("shulker_box", maximumAmount = 1)
    @JvmField val WHITE_SHULKER_BOX = register("white_shulker_box", maximumAmount = 1)
    @JvmField val ORANGE_SHULKER_BOX = register("orange_shulker_box", maximumAmount = 1)
    @JvmField val MAGENTA_SHULKER_BOX = register("magenta_shulker_box", maximumAmount = 1)
    @JvmField val LIGHT_BLUE_SHULKER_BOX = register("light_blue_shulker_box", maximumAmount = 1)
    @JvmField val YELLOW_SHULKER_BOX = register("yellow_shulker_box", maximumAmount = 1)
    @JvmField val LIME_SHULKER_BOX = register("lime_shulker_box", maximumAmount = 1)
    @JvmField val PINK_SHULKER_BOX = register("pink_shulker_box", maximumAmount = 1)
    @JvmField val GRAY_SHULKER_BOX = register("gray_shulker_box", maximumAmount = 1)
    @JvmField val LIGHT_GRAY_SHULKER_BOX = register("light_gray_shulker_box", maximumAmount = 1)
    @JvmField val CYAN_SHULKER_BOX = register("cyan_shulker_box", maximumAmount = 1)
    @JvmField val PURPLE_SHULKER_BOX = register("purple_shulker_box", maximumAmount = 1)
    @JvmField val BLUE_SHULKER_BOX = register("blue_shulker_box", maximumAmount = 1)
    @JvmField val BROWN_SHULKER_BOX = register("brown_shulker_box", maximumAmount = 1)
    @JvmField val GREEN_SHULKER_BOX = register("green_shulker_box", maximumAmount = 1)
    @JvmField val RED_SHULKER_BOX = register("red_shulker_box", maximumAmount = 1)
    @JvmField val BLACK_SHULKER_BOX = register("black_shulker_box", maximumAmount = 1)
    @JvmField val WHITE_GLAZED_TERRACOTTA = register("white_glazed_terracotta")
    @JvmField val ORANGE_GLAZED_TERRACOTTA = register("orange_glazed_terracotta")
    @JvmField val MAGENTA_GLAZED_TERRACOTTA = register("magenta_glazed_terracotta")
    @JvmField val LIGHT_BLUE_GLAZED_TERRACOTTA = register("light_blue_glazed_terracotta")
    @JvmField val YELLOW_GLAZED_TERRACOTTA = register("yellow_glazed_terracotta")
    @JvmField val LIME_GLAZED_TERRACOTTA = register("lime_glazed_terracotta")
    @JvmField val PINK_GLAZED_TERRACOTTA = register("pink_glazed_terracotta")
    @JvmField val GRAY_GLAZED_TERRACOTTA = register("gray_glazed_terracotta")
    @JvmField val LIGHT_GRAY_GLAZED_TERRACOTTA = register("light_gray_glazed_terracotta")
    @JvmField val CYAN_GLAZED_TERRACOTTA = register("cyan_glazed_terracotta")
    @JvmField val PURPLE_GLAZED_TERRACOTTA = register("purple_glazed_terracotta")
    @JvmField val BLUE_GLAZED_TERRACOTTA = register("blue_glazed_terracotta")
    @JvmField val BROWN_GLAZED_TERRACOTTA = register("brown_glazed_terracotta")
    @JvmField val GREEN_GLAZED_TERRACOTTA = register("green_glazed_terracotta")
    @JvmField val RED_GLAZED_TERRACOTTA = register("red_glazed_terracotta")
    @JvmField val BLACK_GLAZED_TERRACOTTA = register("black_glazed_terracotta")
    @JvmField val WHITE_CONCRETE = register("white_concrete")
    @JvmField val ORANGE_CONCRETE = register("orange_concrete")
    @JvmField val MAGENTA_CONCRETE = register("magenta_concrete")
    @JvmField val LIGHT_BLUE_CONCRETE = register("light_blue_concrete")
    @JvmField val YELLOW_CONCRETE = register("yellow_concrete")
    @JvmField val LIME_CONCRETE = register("lime_concrete")
    @JvmField val PINK_CONCRETE = register("pink_concrete")
    @JvmField val GRAY_CONCRETE = register("gray_concrete")
    @JvmField val LIGHT_GRAY_CONCRETE = register("light_gray_concrete")
    @JvmField val CYAN_CONCRETE = register("cyan_concrete")
    @JvmField val PURPLE_CONCRETE = register("purple_concrete")
    @JvmField val BLUE_CONCRETE = register("blue_concrete")
    @JvmField val BROWN_CONCRETE = register("brown_concrete")
    @JvmField val GREEN_CONCRETE = register("green_concrete")
    @JvmField val RED_CONCRETE = register("red_concrete")
    @JvmField val BLACK_CONCRETE = register("black_concrete")
    @JvmField val WHITE_CONCRETE_POWDER = register("white_concrete_powder")
    @JvmField val ORANGE_CONCRETE_POWDER = register("orange_concrete_powder")
    @JvmField val MAGENTA_CONCRETE_POWDER = register("magenta_concrete_powder")
    @JvmField val LIGHT_BLUE_CONCRETE_POWDER = register("light_blue_concrete_powder")
    @JvmField val YELLOW_CONCRETE_POWDER = register("yellow_concrete_powder")
    @JvmField val LIME_CONCRETE_POWDER = register("lime_concrete_powder")
    @JvmField val PINK_CONCRETE_POWDER = register("pink_concrete_powder")
    @JvmField val GRAY_CONCRETE_POWDER = register("gray_concrete_powder")
    @JvmField val LIGHT_GRAY_CONCRETE_POWDER = register("light_gray_concrete_powder")
    @JvmField val CYAN_CONCRETE_POWDER = register("cyan_concrete_powder")
    @JvmField val PURPLE_CONCRETE_POWDER = register("purple_concrete_powder")
    @JvmField val BLUE_CONCRETE_POWDER = register("blue_concrete_powder")
    @JvmField val BROWN_CONCRETE_POWDER = register("brown_concrete_powder")
    @JvmField val GREEN_CONCRETE_POWDER = register("green_concrete_powder")
    @JvmField val RED_CONCRETE_POWDER = register("red_concrete_powder")
    @JvmField val BLACK_CONCRETE_POWDER = register("black_concrete_powder")
    @JvmField val TURTLE_EGG = register("turtle_egg")
    @JvmField val DEAD_TUBE_CORAL_BLOCK = register("dead_tube_coral_block")
    @JvmField val DEAD_BRAIN_CORAL_BLOCK = register("dead_brain_coral_block")
    @JvmField val DEAD_BUBBLE_CORAL_BLOCK = register("dead_bubble_coral_block")
    @JvmField val DEAD_FIRE_CORAL_BLOCK = register("dead_fire_coral_block")
    @JvmField val DEAD_HORN_CORAL_BLOCK = register("dead_horn_coral_block")
    @JvmField val TUBE_CORAL_BLOCK = register("tube_coral_block")
    @JvmField val BRAIN_CORAL_BLOCK = register("brain_coral_block")
    @JvmField val BUBBLE_CORAL_BLOCK = register("bubble_coral_block")
    @JvmField val FIRE_CORAL_BLOCK = register("fire_coral_block")
    @JvmField val HORN_CORAL_BLOCK = register("horn_coral_block")
    @JvmField val TUBE_CORAL = register("tube_coral")
    @JvmField val BRAIN_CORAL = register("brain_coral")
    @JvmField val BUBBLE_CORAL = register("bubble_coral")
    @JvmField val FIRE_CORAL = register("fire_coral")
    @JvmField val HORN_CORAL = register("horn_coral")
    @JvmField val DEAD_BRAIN_CORAL = register("dead_brain_coral")
    @JvmField val DEAD_BUBBLE_CORAL = register("dead_bubble_coral")
    @JvmField val DEAD_FIRE_CORAL = register("dead_fire_coral")
    @JvmField val DEAD_HORN_CORAL = register("dead_horn_coral")
    @JvmField val DEAD_TUBE_CORAL = register("dead_tube_coral")
    @JvmField val TUBE_CORAL_FAN = register("tube_coral_fan")
    @JvmField val BRAIN_CORAL_FAN = register("brain_coral_fan")
    @JvmField val BUBBLE_CORAL_FAN = register("bubble_coral_fan")
    @JvmField val FIRE_CORAL_FAN = register("fire_coral_fan")
    @JvmField val HORN_CORAL_FAN = register("horn_coral_fan")
    @JvmField val DEAD_TUBE_CORAL_FAN = register("dead_tube_coral_fan")
    @JvmField val DEAD_BRAIN_CORAL_FAN = register("dead_brain_coral_fan")
    @JvmField val DEAD_BUBBLE_CORAL_FAN = register("dead_bubble_coral_fan")
    @JvmField val DEAD_FIRE_CORAL_FAN = register("dead_fire_coral_fan")
    @JvmField val DEAD_HORN_CORAL_FAN = register("dead_horn_coral_fan")
    @JvmField val BLUE_ICE = register("blue_ice")
    @JvmField val CONDUIT = register("conduit", ItemRarity.RARE)
    @JvmField val POLISHED_GRANITE_STAIRS = register("polished_granite_stairs")
    @JvmField val SMOOTH_RED_SANDSTONE_STAIRS = register("smooth_red_sandstone_stairs")
    @JvmField val MOSSY_STONE_BRICK_STAIRS = register("mossy_stone_brick_stairs")
    @JvmField val POLISHED_DIORITE_STAIRS = register("polished_diorite_stairs")
    @JvmField val MOSSY_COBBLESTONE_STAIRS = register("mossy_cobblestone_stairs")
    @JvmField val END_STONE_BRICK_STAIRS = register("end_stone_brick_stairs")
    @JvmField val STONE_STAIRS = register("stone_stairs")
    @JvmField val SMOOTH_SANDSTONE_STAIRS = register("smooth_sandstone_stairs")
    @JvmField val SMOOTH_QUARTZ_STAIRS = register("smooth_quartz_stairs")
    @JvmField val GRANITE_STAIRS = register("granite_stairs")
    @JvmField val ANDESITE_STAIRS = register("andesite_stairs")
    @JvmField val RED_NETHER_BRICK_STAIRS = register("red_nether_brick_stairs")
    @JvmField val POLISHED_ANDESITE_STAIRS = register("polished_andesite_stairs")
    @JvmField val DIORITE_STAIRS = register("diorite_stairs")
    @JvmField val COBBLED_DEEPSLATE_STAIRS = register("cobbled_deepslate_stairs")
    @JvmField val POLISHED_DEEPSLATE_STAIRS = register("polished_deepslate_stairs")
    @JvmField val DEEPSLATE_BRICK_STAIRS = register("deepslate_brick_stairs")
    @JvmField val DEEPSLATE_TILE_STAIRS = register("deepslate_tile_stairs")
    @JvmField val POLISHED_GRANITE_SLAB = register("polished_granite_slab")
    @JvmField val SMOOTH_RED_SANDSTONE_SLAB = register("smooth_red_sandstone_slab")
    @JvmField val MOSSY_STONE_BRICK_SLAB = register("mossy_stone_brick_slab")
    @JvmField val POLISHED_DIORITE_SLAB = register("polished_diorite_slab")
    @JvmField val MOSSY_COBBLESTONE_SLAB = register("mossy_cobblestone_slab")
    @JvmField val END_STONE_BRICK_SLAB = register("end_stone_brick_slab")
    @JvmField val SMOOTH_SANDSTONE_SLAB = register("smooth_sandstone_slab")
    @JvmField val SMOOTH_QUARTZ_SLAB = register("smooth_quartz_slab")
    @JvmField val GRANITE_SLAB = register("granite_slab")
    @JvmField val ANDESITE_SLAB = register("andesite_slab")
    @JvmField val RED_NETHER_BRICK_SLAB = register("red_nether_brick_slab")
    @JvmField val POLISHED_ANDESITE_SLAB = register("polished_andesite_slab")
    @JvmField val DIORITE_SLAB = register("diorite_slab")
    @JvmField val COBBLED_DEEPSLATE_SLAB = register("cobbled_deepslate_slab")
    @JvmField val POLISHED_DEEPSLATE_SLAB = register("polished_deepslate_slab")
    @JvmField val DEEPSLATE_BRICK_SLAB = register("deepslate_brick_slab")
    @JvmField val DEEPSLATE_TILE_SLAB = register("deepslate_tile_slab")
    @JvmField val SCAFFOLDING = register("scaffolding")
    @JvmField val REDSTONE = register("redstone")
    @JvmField val REDSTONE_TORCH = register("redstone_torch")
    @JvmField val REDSTONE_BLOCK = register("redstone_block")
    @JvmField val REPEATER = register("repeater")
    @JvmField val COMPARATOR = register("comparator")
    @JvmField val PISTON = register("piston")
    @JvmField val STICKY_PISTON = register("sticky_piston")
    @JvmField val SLIME_BLOCK = register("slime_block")
    @JvmField val HONEY_BLOCK = register("honey_block")
    @JvmField val OBSERVER = register("observer")
    @JvmField val HOPPER = register("hopper")
    @JvmField val DISPENSER = register("dispenser")
    @JvmField val DROPPER = register("dropper")
    @JvmField val LECTERN = register("lectern")
    @JvmField val TARGET = register("target")
    @JvmField val LEVER = register("lever")
    @JvmField val LIGHTNING_ROD = register("lightning_rod")
    @JvmField val DAYLIGHT_DETECTOR = register("daylight_detector")
    @JvmField val SCULK_SENSOR = register("sculk_sensor")
    @JvmField val TRIPWIRE_HOOK = register("tripwire_hook")
    @JvmField val TRAPPED_CHEST = register("trapped_chest")
    @JvmField val TNT = register("tnt")
    @JvmField val REDSTONE_LAMP = register("redstone_lamp")
    @JvmField val NOTE_BLOCK = register("note_block")
    @JvmField val STONE_BUTTON = register("stone_button")
    @JvmField val POLISHED_BLACKSTONE_BUTTON = register("polished_blackstone_button")
    @JvmField val OAK_BUTTON = register("oak_button")
    @JvmField val SPRUCE_BUTTON = register("spruce_button")
    @JvmField val BIRCH_BUTTON = register("birch_button")
    @JvmField val JUNGLE_BUTTON = register("jungle_button")
    @JvmField val ACACIA_BUTTON = register("acacia_button")
    @JvmField val DARK_OAK_BUTTON = register("dark_oak_button")
    @JvmField val CRIMSON_BUTTON = register("crimson_button")
    @JvmField val WARPED_BUTTON = register("warped_button")
    @JvmField val STONE_PRESSURE_PLATE = register("stone_pressure_plate")
    @JvmField val POLISHED_BLACKSTONE_PRESSURE_PLATE = register("polished_blackstone_pressure_plate")
    @JvmField val LIGHT_WEIGHTED_PRESSURE_PLATE = register("light_weighted_pressure_plate")
    @JvmField val HEAVY_WEIGHTED_PRESSURE_PLATE = register("heavy_weighted_pressure_plate")
    @JvmField val OAK_PRESSURE_PLATE = register("oak_pressure_plate")
    @JvmField val SPRUCE_PRESSURE_PLATE = register("spruce_pressure_plate")
    @JvmField val BIRCH_PRESSURE_PLATE = register("birch_pressure_plate")
    @JvmField val JUNGLE_PRESSURE_PLATE = register("jungle_pressure_plate")
    @JvmField val ACACIA_PRESSURE_PLATE = register("acacia_pressure_plate")
    @JvmField val DARK_OAK_PRESSURE_PLATE = register("dark_oak_pressure_plate")
    @JvmField val CRIMSON_PRESSURE_PLATE = register("crimson_pressure_plate")
    @JvmField val WARPED_PRESSURE_PLATE = register("warped_pressure_plate")
    @JvmField val IRON_DOOR = register("iron_door")
    @JvmField val OAK_DOOR = register("oak_door")
    @JvmField val SPRUCE_DOOR = register("spruce_door")
    @JvmField val BIRCH_DOOR = register("birch_door")
    @JvmField val JUNGLE_DOOR = register("jungle_door")
    @JvmField val ACACIA_DOOR = register("acacia_door")
    @JvmField val DARK_OAK_DOOR = register("dark_oak_door")
    @JvmField val CRIMSON_DOOR = register("crimson_door")
    @JvmField val WARPED_DOOR = register("warped_door")
    @JvmField val IRON_TRAPDOOR = register("iron_trapdoor")
    @JvmField val OAK_TRAPDOOR = register("oak_trapdoor")
    @JvmField val SPRUCE_TRAPDOOR = register("spruce_trapdoor")
    @JvmField val BIRCH_TRAPDOOR = register("birch_trapdoor")
    @JvmField val JUNGLE_TRAPDOOR = register("jungle_trapdoor")
    @JvmField val ACACIA_TRAPDOOR = register("acacia_trapdoor")
    @JvmField val DARK_OAK_TRAPDOOR = register("dark_oak_trapdoor")
    @JvmField val CRIMSON_TRAPDOOR = register("crimson_trapdoor")
    @JvmField val WARPED_TRAPDOOR = register("warped_trapdoor")
    @JvmField val OAK_FENCE_GATE = register("oak_fence_gate")
    @JvmField val SPRUCE_FENCE_GATE = register("spruce_fence_gate")
    @JvmField val BIRCH_FENCE_GATE = register("birch_fence_gate")
    @JvmField val JUNGLE_FENCE_GATE = register("jungle_fence_gate")
    @JvmField val ACACIA_FENCE_GATE = register("acacia_fence_gate")
    @JvmField val DARK_OAK_FENCE_GATE = register("dark_oak_fence_gate")
    @JvmField val CRIMSON_FENCE_GATE = register("crimson_fence_gate")
    @JvmField val WARPED_FENCE_GATE = register("warped_fence_gate")
    @JvmField val POWERED_RAIL = register("powered_rail")
    @JvmField val DETECTOR_RAIL = register("detector_rail")
    @JvmField val RAIL = register("rail")
    @JvmField val ACTIVATOR_RAIL = register("activator_rail")
    @JvmField val SADDLE = register("saddle", maximumAmount = 1)
    @JvmField val MINECART = register("minecart", maximumAmount = 1)
    @JvmField val CHEST_MINECART = register("chest_minecart", maximumAmount = 1)
    @JvmField val FURNACE_MINECART = register("furnace_minecart", maximumAmount = 1)
    @JvmField val TNT_MINECART = register("tnt_minecart", maximumAmount = 1)
    @JvmField val HOPPER_MINECART = register("hopper_minecart", maximumAmount = 1)
    @JvmField val CARROT_ON_A_STICK = register("carrot_on_a_stick", maximumAmount = 1, durability = 25)
    @JvmField val WARPED_FUNGUS_ON_A_STICK = register("warped_fungus_on_a_stick", maximumAmount = 1, durability = 100)
    @JvmField val ELYTRA = register("elytra", maximumAmount = 1, durability = 432)
    @JvmField val OAK_BOAT = register("oak_boat", maximumAmount = 1)
    @JvmField val SPRUCE_BOAT = register("spruce_boat", maximumAmount = 1)
    @JvmField val BIRCH_BOAT = register("birch_boat", maximumAmount = 1)
    @JvmField val JUNGLE_BOAT = register("jungle_boat", maximumAmount = 1)
    @JvmField val ACACIA_BOAT = register("acacia_boat", maximumAmount = 1)
    @JvmField val DARK_OAK_BOAT = register("dark_oak_boat", maximumAmount = 1)
    @JvmField val STRUCTURE_BLOCK = register("structure_block", ItemRarity.EPIC)
    @JvmField val JIGSAW = register("jigsaw", ItemRarity.EPIC)
    @JvmField val TURTLE_HELMET = register("turtle_helmet", maximumAmount = 1)
    @JvmField val SCUTE = register("scute")
    @JvmField val FLINT_AND_STEEL = register("flint_and_steel", maximumAmount = 1, durability = 64)
    @JvmField val APPLE = register("apple")
    @JvmField val BOW = register("bow", maximumAmount = 1, durability = 384)
    @JvmField val ARROW = register("arrow")
    @JvmField val COAL = register("coal")
    @JvmField val CHARCOAL = register("charcoal")
    @JvmField val DIAMOND = register("diamond")
    @JvmField val EMERALD = register("emerald")
    @JvmField val LAPIS_LAZULI = register("lapis_lazuli")
    @JvmField val QUARTZ = register("quartz")
    @JvmField val AMETHYST_SHARD = register("amethyst_shard")
    @JvmField val RAW_IRON = register("raw_iron")
    @JvmField val IRON_INGOT = register("iron_ingot")
    @JvmField val RAW_COPPER = register("raw_copper")
    @JvmField val COPPER_INGOT = register("copper_ingot")
    @JvmField val RAW_GOLD = register("raw_gold")
    @JvmField val GOLD_INGOT = register("gold_ingot")
    @JvmField val NETHERITE_INGOT = register("netherite_ingot", isFireResistant = true)
    @JvmField val NETHERITE_SCRAP = register("netherite_scrap", isFireResistant = true)
    @JvmField val WOODEN_SWORD = register("wooden_sword", maximumAmount = 1)
    @JvmField val WOODEN_SHOVEL = register("wooden_shovel", maximumAmount = 1)
    @JvmField val WOODEN_PICKAXE = register("wooden_pickaxe", maximumAmount = 1)
    @JvmField val WOODEN_AXE = register("wooden_axe", maximumAmount = 1)
    @JvmField val WOODEN_HOE = register("wooden_hoe", maximumAmount = 1)
    @JvmField val STONE_SWORD = register("stone_sword", maximumAmount = 1)
    @JvmField val STONE_SHOVEL = register("stone_shovel", maximumAmount = 1)
    @JvmField val STONE_PICKAXE = register("stone_pickaxe", maximumAmount = 1)
    @JvmField val STONE_AXE = register("stone_axe", maximumAmount = 1)
    @JvmField val STONE_HOE = register("stone_hoe", maximumAmount = 1)
    @JvmField val GOLDEN_SWORD = register("golden_sword", maximumAmount = 1)
    @JvmField val GOLDEN_SHOVEL = register("golden_shovel", maximumAmount = 1)
    @JvmField val GOLDEN_PICKAXE = register("golden_pickaxe", maximumAmount = 1)
    @JvmField val GOLDEN_AXE = register("golden_axe", maximumAmount = 1)
    @JvmField val GOLDEN_HOE = register("golden_hoe", maximumAmount = 1)
    @JvmField val IRON_SWORD = register("iron_sword", maximumAmount = 1)
    @JvmField val IRON_SHOVEL = register("iron_shovel", maximumAmount = 1)
    @JvmField val IRON_PICKAXE = register("iron_pickaxe", maximumAmount = 1)
    @JvmField val IRON_AXE = register("iron_axe", maximumAmount = 1)
    @JvmField val IRON_HOE = register("iron_hoe", maximumAmount = 1)
    @JvmField val DIAMOND_SWORD = register("diamond_sword", maximumAmount = 1)
    @JvmField val DIAMOND_SHOVEL = register("diamond_shovel", maximumAmount = 1)
    @JvmField val DIAMOND_PICKAXE = register("diamond_pickaxe", maximumAmount = 1)
    @JvmField val DIAMOND_AXE = register("diamond_axe", maximumAmount = 1)
    @JvmField val DIAMOND_HOE = register("diamond_hoe", maximumAmount = 1)
    @JvmField val NETHERITE_SWORD = register("netherite_sword", maximumAmount = 1, isFireResistant = true)
    @JvmField val NETHERITE_SHOVEL = register("netherite_shovel", maximumAmount = 1, isFireResistant = true)
    @JvmField val NETHERITE_PICKAXE = register("netherite_pickaxe", maximumAmount = 1, isFireResistant = true)
    @JvmField val NETHERITE_AXE = register("netherite_axe", maximumAmount = 1, isFireResistant = true)
    @JvmField val NETHERITE_HOE = register("netherite_hoe", maximumAmount = 1, isFireResistant = true)
    @JvmField val STICK = register("stick")
    @JvmField val BOWL = register("bowl")
    @JvmField val MUSHROOM_STEW = register("mushroom_stew", maximumAmount = 1)
    @JvmField val STRING = register("string")
    @JvmField val FEATHER = register("feather")
    @JvmField val GUNPOWDER = register("gunpowder")
    @JvmField val WHEAT_SEEDS = register("wheat_seeds")
    @JvmField val WHEAT = register("wheat")
    @JvmField val BREAD = register("bread")
    @JvmField val LEATHER_HELMET = register("leather_helmet", maximumAmount = 1)
    @JvmField val LEATHER_CHESTPLATE = register("leather_chestplate", maximumAmount = 1)
    @JvmField val LEATHER_LEGGINGS = register("leather_leggings", maximumAmount = 1)
    @JvmField val LEATHER_BOOTS = register("leather_boots", maximumAmount = 1)
    @JvmField val CHAINMAIL_HELMET = register("chainmail_helmet", maximumAmount = 1)
    @JvmField val CHAINMAIL_CHESTPLATE = register("chainmail_chestplate", maximumAmount = 1)
    @JvmField val CHAINMAIL_LEGGINGS = register("chainmail_leggings", maximumAmount = 1)
    @JvmField val CHAINMAIL_BOOTS = register("chainmail_boots", maximumAmount = 1)
    @JvmField val IRON_HELMET = register("iron_helmet", maximumAmount = 1)
    @JvmField val IRON_CHESTPLATE = register("iron_chestplate", maximumAmount = 1)
    @JvmField val IRON_LEGGINGS = register("iron_leggings", maximumAmount = 1)
    @JvmField val IRON_BOOTS = register("iron_boots", maximumAmount = 1)
    @JvmField val DIAMOND_HELMET = register("diamond_helmet", maximumAmount = 1)
    @JvmField val DIAMOND_CHESTPLATE = register("diamond_chestplate", maximumAmount = 1)
    @JvmField val DIAMOND_LEGGINGS = register("diamond_leggings", maximumAmount = 1)
    @JvmField val DIAMOND_BOOTS = register("diamond_boots", maximumAmount = 1)
    @JvmField val GOLDEN_HELMET = register("golden_helmet", maximumAmount = 1)
    @JvmField val GOLDEN_CHESTPLATE = register("golden_chestplate", maximumAmount = 1)
    @JvmField val GOLDEN_LEGGINGS = register("golden_leggings", maximumAmount = 1)
    @JvmField val GOLDEN_BOOTS = register("golden_boots", maximumAmount = 1)
    @JvmField val NETHERITE_HELMET = register("netherite_helmet", maximumAmount = 1, isFireResistant = true)
    @JvmField val NETHERITE_CHESTPLATE = register("netherite_chestplate", maximumAmount = 1, isFireResistant = true)
    @JvmField val NETHERITE_LEGGINGS = register("netherite_leggings", maximumAmount = 1, isFireResistant = true)
    @JvmField val NETHERITE_BOOTS = register("netherite_boots", maximumAmount = 1, isFireResistant = true)
    @JvmField val FLINT = register("flint")
    @JvmField val PORKCHOP = register("porkchop")
    @JvmField val COOKED_PORKCHOP = register("cooked_porkchop")
    @JvmField val PAINTING = register("painting")
    @JvmField val GOLDEN_APPLE = register("golden_apple", ItemRarity.RARE)
    @JvmField val ENCHANTED_GOLDEN_APPLE = register("enchanted_golden_apple", ItemRarity.EPIC)
    @JvmField val OAK_SIGN = register("oak_sign", maximumAmount = 16)
    @JvmField val SPRUCE_SIGN = register("spruce_sign", maximumAmount = 16)
    @JvmField val BIRCH_SIGN = register("birch_sign", maximumAmount = 16)
    @JvmField val JUNGLE_SIGN = register("jungle_sign", maximumAmount = 16)
    @JvmField val ACACIA_SIGN = register("acacia_sign", maximumAmount = 16)
    @JvmField val DARK_OAK_SIGN = register("dark_oak_sign", maximumAmount = 16)
    @JvmField val CRIMSON_SIGN = register("crimson_sign", maximumAmount = 16)
    @JvmField val WARPED_SIGN = register("warped_sign", maximumAmount = 16)
    @JvmField val BUCKET = register("bucket", maximumAmount = 16)
    @JvmField val WATER_BUCKET = register("water_bucket", maximumAmount = 1)
    @JvmField val LAVA_BUCKET = register("lava_bucket", maximumAmount = 1)
    @JvmField val POWDER_SNOW_BUCKET = register("powder_snow_bucket", maximumAmount = 1)
    @JvmField val SNOWBALL = register("snowball", maximumAmount = 16)
    @JvmField val LEATHER = register("leather")
    @JvmField val MILK_BUCKET = register("milk_bucket", maximumAmount = 1)
    @JvmField val PUFFERFISH_BUCKET = register("pufferfish_bucket", maximumAmount = 1)
    @JvmField val SALMON_BUCKET = register("salmon_bucket", maximumAmount = 1)
    @JvmField val COD_BUCKET = register("cod_bucket", maximumAmount = 1)
    @JvmField val TROPICAL_FISH_BUCKET = register("tropical_fish_bucket", maximumAmount = 1)
    @JvmField val AXOLOTL_BUCKET = register("axolotl_bucket", maximumAmount = 1)
    @JvmField val BRICK = register("brick")
    @JvmField val CLAY_BALL = register("clay_ball")
    @JvmField val DRIED_KELP_BLOCK = register("dried_kelp_block")
    @JvmField val PAPER = register("paper")
    @JvmField val BOOK = register("book")
    @JvmField val SLIME_BALL = register("slime_ball")
    @JvmField val EGG = register("egg", maximumAmount = 16)
    @JvmField val COMPASS = register("compass")
    @JvmField val BUNDLE = register("bundle", maximumAmount = 1)
    @JvmField val FISHING_ROD = register("fishing_rod", maximumAmount = 1, durability = 64)
    @JvmField val CLOCK = register("clock")
    @JvmField val SPYGLASS = register("spyglass", maximumAmount = 1)
    @JvmField val GLOWSTONE_DUST = register("glowstone_dust")
    @JvmField val COD = register("cod")
    @JvmField val SALMON = register("salmon")
    @JvmField val TROPICAL_FISH = register("tropical_fish")
    @JvmField val PUFFERFISH = register("pufferfish")
    @JvmField val COOKED_COD = register("cooked_cod")
    @JvmField val COOKED_SALMON = register("cooked_salmon")
    @JvmField val INK_SAC = register("ink_sac")
    @JvmField val GLOW_INK_SAC = register("glow_ink_sac")
    @JvmField val COCOA_BEANS = register("cocoa_beans")
    @JvmField val WHITE_DYE = register("white_dye")
    @JvmField val ORANGE_DYE = register("orange_dye")
    @JvmField val MAGENTA_DYE = register("magenta_dye")
    @JvmField val LIGHT_BLUE_DYE = register("light_blue_dye")
    @JvmField val YELLOW_DYE = register("yellow_dye")
    @JvmField val LIME_DYE = register("lime_dye")
    @JvmField val PINK_DYE = register("pink_dye")
    @JvmField val GRAY_DYE = register("gray_dye")
    @JvmField val LIGHT_GRAY_DYE = register("light_gray_dye")
    @JvmField val CYAN_DYE = register("cyan_dye")
    @JvmField val PURPLE_DYE = register("purple_dye")
    @JvmField val BLUE_DYE = register("blue_dye")
    @JvmField val BROWN_DYE = register("brown_dye")
    @JvmField val GREEN_DYE = register("green_dye")
    @JvmField val RED_DYE = register("red_dye")
    @JvmField val BLACK_DYE = register("black_dye")
    @JvmField val BONE_MEAL = register("bone_meal")
    @JvmField val BONE = register("bone")
    @JvmField val SUGAR = register("sugar")
    @JvmField val CAKE = register("cake", maximumAmount = 1)
    @JvmField val WHITE_BED = register("white_bed", maximumAmount = 1)
    @JvmField val ORANGE_BED = register("orange_bed", maximumAmount = 1)
    @JvmField val MAGENTA_BED = register("magenta_bed", maximumAmount = 1)
    @JvmField val LIGHT_BLUE_BED = register("light_blue_bed", maximumAmount = 1)
    @JvmField val YELLOW_BED = register("yellow_bed", maximumAmount = 1)
    @JvmField val LIME_BED = register("lime_bed", maximumAmount = 1)
    @JvmField val PINK_BED = register("pink_bed", maximumAmount = 1)
    @JvmField val GRAY_BED = register("gray_bed", maximumAmount = 1)
    @JvmField val LIGHT_GRAY_BED = register("light_gray_bed", maximumAmount = 1)
    @JvmField val CYAN_BED = register("cyan_bed", maximumAmount = 1)
    @JvmField val PURPLE_BED = register("purple_bed", maximumAmount = 1)
    @JvmField val BLUE_BED = register("blue_bed", maximumAmount = 1)
    @JvmField val BROWN_BED = register("brown_bed", maximumAmount = 1)
    @JvmField val GREEN_BED = register("green_bed", maximumAmount = 1)
    @JvmField val RED_BED = register("red_bed", maximumAmount = 1)
    @JvmField val BLACK_BED = register("black_bed", maximumAmount = 1)
    @JvmField val COOKIE = register("cookie")
    @JvmField val FILLED_MAP = register("filled_map")
    @JvmField val SHEARS = register("shears", maximumAmount = 1, durability = 238)
    @JvmField val MELON_SLICE = register("melon_slice")
    @JvmField val DRIED_KELP = register("dried_kelp")
    @JvmField val PUMPKIN_SEEDS = register("pumpkin_seeds")
    @JvmField val MELON_SEEDS = register("melon_seeds")
    @JvmField val BEEF = register("beef")
    @JvmField val COOKED_BEEF = register("cooked_beef")
    @JvmField val CHICKEN = register("chicken")
    @JvmField val COOKED_CHICKEN = register("cooked_chicken")
    @JvmField val ROTTEN_FLESH = register("rotten_flesh")
    @JvmField val ENDER_PEARL = register("ender_pearl", maximumAmount = 16)
    @JvmField val BLAZE_ROD = register("blaze_rod")
    @JvmField val GHAST_TEAR = register("ghast_tear")
    @JvmField val GOLD_NUGGET = register("gold_nugget")
    @JvmField val NETHER_WART = register("nether_wart")
    @JvmField val POTION = register("potion", maximumAmount = 1)
    @JvmField val GLASS_BOTTLE = register("glass_bottle")
    @JvmField val SPIDER_EYE = register("spider_eye")
    @JvmField val FERMENTED_SPIDER_EYE = register("fermented_spider_eye")
    @JvmField val BLAZE_POWDER = register("blaze_powder")
    @JvmField val MAGMA_CREAM = register("magma_cream")
    @JvmField val BREWING_STAND = register("brewing_stand")
    @JvmField val CAULDRON = register("cauldron")
    @JvmField val ENDER_EYE = register("ender_eye")
    @JvmField val GLISTERING_MELON_SLICE = register("glistering_melon_slice")
    @JvmField val AXOLOTL_SPAWN_EGG = register("axolotl_spawn_egg")
    @JvmField val BAT_SPAWN_EGG = register("bat_spawn_egg")
    @JvmField val BEE_SPAWN_EGG = register("bee_spawn_egg")
    @JvmField val BLAZE_SPAWN_EGG = register("blaze_spawn_egg")
    @JvmField val CAT_SPAWN_EGG = register("cat_spawn_egg")
    @JvmField val CAVE_SPIDER_SPAWN_EGG = register("cave_spider_spawn_egg")
    @JvmField val CHICKEN_SPAWN_EGG = register("chicken_spawn_egg")
    @JvmField val COD_SPAWN_EGG = register("cod_spawn_egg")
    @JvmField val COW_SPAWN_EGG = register("cow_spawn_egg")
    @JvmField val CREEPER_SPAWN_EGG = register("creeper_spawn_egg")
    @JvmField val DOLPHIN_SPAWN_EGG = register("dolphin_spawn_egg")
    @JvmField val DONKEY_SPAWN_EGG = register("donkey_spawn_egg")
    @JvmField val DROWNED_SPAWN_EGG = register("drowned_spawn_egg")
    @JvmField val ELDER_GUARDIAN_SPAWN_EGG = register("elder_guardian_spawn_egg")
    @JvmField val ENDERMAN_SPAWN_EGG = register("enderman_spawn_egg")
    @JvmField val ENDERMITE_SPAWN_EGG = register("endermite_spawn_egg")
    @JvmField val EVOKER_SPAWN_EGG = register("evoker_spawn_egg")
    @JvmField val FOX_SPAWN_EGG = register("fox_spawn_egg")
    @JvmField val GHAST_SPAWN_EGG = register("ghast_spawn_egg")
    @JvmField val GLOW_SQUID_SPAWN_EGG = register("glow_squid_spawn_egg")
    @JvmField val GOAT_SPAWN_EGG = register("goat_spawn_egg")
    @JvmField val GUARDIAN_SPAWN_EGG = register("guardian_spawn_egg")
    @JvmField val HOGLIN_SPAWN_EGG = register("hoglin_spawn_egg")
    @JvmField val HORSE_SPAWN_EGG = register("horse_spawn_egg")
    @JvmField val HUSK_SPAWN_EGG = register("husk_spawn_egg")
    @JvmField val LLAMA_SPAWN_EGG = register("llama_spawn_egg")
    @JvmField val MAGMA_CUBE_SPAWN_EGG = register("magma_cube_spawn_egg")
    @JvmField val MOOSHROOM_SPAWN_EGG = register("mooshroom_spawn_egg")
    @JvmField val MULE_SPAWN_EGG = register("mule_spawn_egg")
    @JvmField val OCELOT_SPAWN_EGG = register("ocelot_spawn_egg")
    @JvmField val PANDA_SPAWN_EGG = register("panda_spawn_egg")
    @JvmField val PARROT_SPAWN_EGG = register("parrot_spawn_egg")
    @JvmField val PHANTOM_SPAWN_EGG = register("phantom_spawn_egg")
    @JvmField val PIG_SPAWN_EGG = register("pig_spawn_egg")
    @JvmField val PIGLIN_SPAWN_EGG = register("piglin_spawn_egg")
    @JvmField val PIGLIN_BRUTE_SPAWN_EGG = register("piglin_brute_spawn_egg")
    @JvmField val PILLAGER_SPAWN_EGG = register("pillager_spawn_egg")
    @JvmField val POLAR_BEAR_SPAWN_EGG = register("polar_bear_spawn_egg")
    @JvmField val PUFFERFISH_SPAWN_EGG = register("pufferfish_spawn_egg")
    @JvmField val RABBIT_SPAWN_EGG = register("rabbit_spawn_egg")
    @JvmField val RAVAGER_SPAWN_EGG = register("ravager_spawn_egg")
    @JvmField val SALMON_SPAWN_EGG = register("salmon_spawn_egg")
    @JvmField val SHEEP_SPAWN_EGG = register("sheep_spawn_egg")
    @JvmField val SHULKER_SPAWN_EGG = register("shulker_spawn_egg")
    @JvmField val SILVERFISH_SPAWN_EGG = register("silverfish_spawn_egg")
    @JvmField val SKELETON_SPAWN_EGG = register("skeleton_spawn_egg")
    @JvmField val SKELETON_HORSE_SPAWN_EGG = register("skeleton_horse_spawn_egg")
    @JvmField val SLIME_SPAWN_EGG = register("slime_spawn_egg")
    @JvmField val SPIDER_SPAWN_EGG = register("spider_spawn_egg")
    @JvmField val SQUID_SPAWN_EGG = register("squid_spawn_egg")
    @JvmField val STRAY_SPAWN_EGG = register("stray_spawn_egg")
    @JvmField val STRIDER_SPAWN_EGG = register("strider_spawn_egg")
    @JvmField val TRADER_LLAMA_SPAWN_EGG = register("trader_llama_spawn_egg")
    @JvmField val TROPICAL_FISH_SPAWN_EGG = register("tropical_fish_spawn_egg")
    @JvmField val TURTLE_SPAWN_EGG = register("turtle_spawn_egg")
    @JvmField val VEX_SPAWN_EGG = register("vex_spawn_egg")
    @JvmField val VILLAGER_SPAWN_EGG = register("villager_spawn_egg")
    @JvmField val VINDICATOR_SPAWN_EGG = register("vindicator_spawn_egg")
    @JvmField val WANDERING_TRADER_SPAWN_EGG = register("wandering_trader_spawn_egg")
    @JvmField val WITCH_SPAWN_EGG = register("witch_spawn_egg")
    @JvmField val WITHER_SKELETON_SPAWN_EGG = register("wither_skeleton_spawn_egg")
    @JvmField val WOLF_SPAWN_EGG = register("wolf_spawn_egg")
    @JvmField val ZOGLIN_SPAWN_EGG = register("zoglin_spawn_egg")
    @JvmField val ZOMBIE_SPAWN_EGG = register("zombie_spawn_egg")
    @JvmField val ZOMBIE_HORSE_SPAWN_EGG = register("zombie_horse_spawn_egg")
    @JvmField val ZOMBIE_VILLAGER_SPAWN_EGG = register("zombie_villager_spawn_egg")
    @JvmField val ZOMBIFIED_PIGLIN_SPAWN_EGG = register("zombified_piglin_spawn_egg")
    @JvmField val EXPERIENCE_BOTTLE = register("experience_bottle", ItemRarity.UNCOMMON)
    @JvmField val FIRE_CHARGE = register("fire_charge")
    @JvmField val WRITABLE_BOOK = register("writable_book", maximumAmount = 1)
    @JvmField val WRITTEN_BOOK = register("written_book", maximumAmount = 16)
    @JvmField val ITEM_FRAME = register("item_frame")
    @JvmField val GLOW_ITEM_FRAME = register("glow_item_frame")
    @JvmField val FLOWER_POT = register("flower_pot")
    @JvmField val CARROT = register("carrot")
    @JvmField val POTATO = register("potato")
    @JvmField val BAKED_POTATO = register("baked_potato")
    @JvmField val POISONOUS_POTATO = register("poisonous_potato")
    @JvmField val MAP = register("map")
    @JvmField val GOLDEN_CARROT = register("golden_carrot")
    @JvmField val SKELETON_SKULL = register("skeleton_skull", ItemRarity.UNCOMMON)
    @JvmField val WITHER_SKELETON_SKULL = register("wither_skeleton_skull", ItemRarity.UNCOMMON)
    @JvmField val PLAYER_HEAD = register("player_head", ItemRarity.UNCOMMON)
    @JvmField val ZOMBIE_HEAD = register("zombie_head", ItemRarity.UNCOMMON)
    @JvmField val CREEPER_HEAD = register("creeper_head", ItemRarity.UNCOMMON)
    @JvmField val DRAGON_HEAD = register("dragon_head", ItemRarity.UNCOMMON)
    @JvmField val NETHER_STAR = register("nether_star", ItemRarity.UNCOMMON)
    @JvmField val PUMPKIN_PIE = register("pumpkin_pie")
    @JvmField val FIREWORK_ROCKET = register("firework_rocket")
    @JvmField val FIREWORK_STAR = register("firework_star")
    @JvmField val ENCHANTED_BOOK = register("enchanted_book", ItemRarity.UNCOMMON, 1)
    @JvmField val NETHER_BRICK = register("nether_brick")
    @JvmField val PRISMARINE_SHARD = register("prismarine_shard")
    @JvmField val PRISMARINE_CRYSTALS = register("prismarine_crystals")
    @JvmField val RABBIT = register("rabbit")
    @JvmField val COOKED_RABBIT = register("cooked_rabbit")
    @JvmField val RABBIT_STEW = register("rabbit_stew", maximumAmount = 1)
    @JvmField val RABBIT_FOOT = register("rabbit_foot")
    @JvmField val RABBIT_HIDE = register("rabbit_hide")
    @JvmField val ARMOR_STAND = register("armor_stand", maximumAmount = 16)
    @JvmField val IRON_HORSE_ARMOR = register("iron_horse_armor", maximumAmount = 1)
    @JvmField val GOLDEN_HORSE_ARMOR = register("golden_horse_armor", maximumAmount = 1)
    @JvmField val DIAMOND_HORSE_ARMOR = register("diamond_horse_armor", maximumAmount = 1)
    @JvmField val LEATHER_HORSE_ARMOR = register("leather_horse_armor", maximumAmount = 1)
    @JvmField val LEAD = register("lead")
    @JvmField val NAME_TAG = register("name_tag")
    @JvmField val COMMAND_BLOCK_MINECART = register("command_block_minecart", ItemRarity.EPIC, 1)
    @JvmField val MUTTON = register("mutton")
    @JvmField val COOKED_MUTTON = register("cooked_mutton")
    @JvmField val WHITE_BANNER = register("white_banner", maximumAmount = 16)
    @JvmField val ORANGE_BANNER = register("orange_banner", maximumAmount = 16)
    @JvmField val MAGENTA_BANNER = register("magenta_banner", maximumAmount = 16)
    @JvmField val LIGHT_BLUE_BANNER = register("light_blue_banner", maximumAmount = 16)
    @JvmField val YELLOW_BANNER = register("yellow_banner", maximumAmount = 16)
    @JvmField val LIME_BANNER = register("lime_banner", maximumAmount = 16)
    @JvmField val PINK_BANNER = register("pink_banner", maximumAmount = 16)
    @JvmField val GRAY_BANNER = register("gray_banner", maximumAmount = 16)
    @JvmField val LIGHT_GRAY_BANNER = register("light_gray_banner", maximumAmount = 16)
    @JvmField val CYAN_BANNER = register("cyan_banner", maximumAmount = 16)
    @JvmField val PURPLE_BANNER = register("purple_banner", maximumAmount = 16)
    @JvmField val BLUE_BANNER = register("blue_banner", maximumAmount = 16)
    @JvmField val BROWN_BANNER = register("brown_banner", maximumAmount = 16)
    @JvmField val GREEN_BANNER = register("green_banner", maximumAmount = 16)
    @JvmField val RED_BANNER = register("red_banner", maximumAmount = 16)
    @JvmField val BLACK_BANNER = register("black_banner", maximumAmount = 16)
    @JvmField val END_CRYSTAL = register("end_crystal", ItemRarity.RARE)
    @JvmField val CHORUS_FRUIT = register("chorus_fruit")
    @JvmField val POPPED_CHORUS_FRUIT = register("popped_chorus_fruit")
    @JvmField val BEETROOT = register("beetroot")
    @JvmField val BEETROOT_SEEDS = register("beetroot_seeds")
    @JvmField val BEETROOT_SOUP = register("beetroot_soup", maximumAmount = 1)
    @JvmField val DRAGON_BREATH = register("dragon_breath", ItemRarity.UNCOMMON)
    @JvmField val SPLASH_POTION = register("splash_potion", maximumAmount = 1)
    @JvmField val SPECTRAL_ARROW = register("spectral_arrow")
    @JvmField val TIPPED_ARROW = register("tipped_arrow")
    @JvmField val LINGERING_POTION = register("lingering_potion", maximumAmount = 1)
    @JvmField val SHIELD = register("shield", maximumAmount = 1, durability = 336)
    @JvmField val TOTEM_OF_UNDYING = register("totem_of_undying", ItemRarity.UNCOMMON, 1)
    @JvmField val SHULKER_SHELL = register("shulker_shell")
    @JvmField val IRON_NUGGET = register("iron_nugget")
    @JvmField val KNOWLEDGE_BOOK = register("knowledge_book", ItemRarity.EPIC, 1)
    @JvmField val DEBUG_STICK = register("debug_stick", ItemRarity.EPIC, 1)
    @JvmField val MUSIC_DISC_13 = register("music_disc_13", ItemRarity.RARE, 1)
    @JvmField val MUSIC_DISC_CAT = register("music_disc_cat", ItemRarity.RARE, 1)
    @JvmField val MUSIC_DISC_BLOCKS = register("music_disc_blocks", ItemRarity.RARE, 1)
    @JvmField val MUSIC_DISC_CHIRP = register("music_disc_chirp", ItemRarity.RARE, 1)
    @JvmField val MUSIC_DISC_FAR = register("music_disc_far", ItemRarity.RARE, 1)
    @JvmField val MUSIC_DISC_MALL = register("music_disc_mall", ItemRarity.RARE, 1)
    @JvmField val MUSIC_DISC_MELLOHI = register("music_disc_mellohi", ItemRarity.RARE, 1)
    @JvmField val MUSIC_DISC_STAL = register("music_disc_stal", ItemRarity.RARE, 1)
    @JvmField val MUSIC_DISC_STRAD = register("music_disc_strad", ItemRarity.RARE, 1)
    @JvmField val MUSIC_DISC_WARD = register("music_disc_ward", ItemRarity.RARE, 1)
    @JvmField val MUSIC_DISC_11 = register("music_disc_11", ItemRarity.RARE, 1)
    @JvmField val MUSIC_DISC_WAIT = register("music_disc_wait", ItemRarity.RARE, 1)
    @JvmField val MUSIC_DISC_PIGSTEP = register("music_disc_pigstep", ItemRarity.RARE, 1)
    @JvmField val TRIDENT = register("trident", maximumAmount = 1, durability = 250)
    @JvmField val PHANTOM_MEMBRANE = register("phantom_membrane")
    @JvmField val NAUTILUS_SHELL = register("nautilus_shell")
    @JvmField val HEART_OF_THE_SEA = register("heart_of_the_sea", ItemRarity.UNCOMMON)
    @JvmField val CROSSBOW = register("crossbow", maximumAmount = 1, durability = 326)
    @JvmField val SUSPICIOUS_STEW = register("suspicious_stew", maximumAmount = 1)
    @JvmField val LOOM = register("loom")
    @JvmField val FLOWER_BANNER_PATTERN = register("flower_banner_pattern", maximumAmount = 1)
    @JvmField val CREEPER_BANNER_PATTERN = register("creeper_banner_pattern", ItemRarity.UNCOMMON, 1)
    @JvmField val SKULL_BANNER_PATTERN = register("skull_banner_pattern", ItemRarity.UNCOMMON, 1)
    @JvmField val MOJANG_BANNER_PATTERN = register("mojang_banner_pattern", ItemRarity.EPIC, 1)
    @JvmField val GLOBE_BANNER_PATTERN = register("globe_banner_pattern", maximumAmount = 1)
    @JvmField val PIGLIN_BANNER_PATTERN = register("piglin_banner_pattern", maximumAmount = 1)
    @JvmField val COMPOSTER = register("composter")
    @JvmField val BARREL = register("barrel")
    @JvmField val SMOKER = register("smoker")
    @JvmField val BLAST_FURNACE = register("blast_furnace")
    @JvmField val CARTOGRAPHY_TABLE = register("cartography_table")
    @JvmField val FLETCHING_TABLE = register("fletching_table")
    @JvmField val GRINDSTONE = register("grindstone")
    @JvmField val SMITHING_TABLE = register("smithing_table")
    @JvmField val STONECUTTER = register("stonecutter")
    @JvmField val BELL = register("bell")
    @JvmField val LANTERN = register("lantern")
    @JvmField val SOUL_LANTERN = register("soul_lantern")
    @JvmField val SWEET_BERRIES = register("sweet_berries")
    @JvmField val GLOW_BERRIES = register("glow_berries")
    @JvmField val CAMPFIRE = register("campfire")
    @JvmField val SOUL_CAMPFIRE = register("soul_campfire")
    @JvmField val SHROOMLIGHT = register("shroomlight")
    @JvmField val HONEYCOMB = register("honeycomb")
    @JvmField val BEE_NEST = register("bee_nest")
    @JvmField val BEEHIVE = register("beehive")
    @JvmField val HONEY_BOTTLE = register("honey_bottle", maximumAmount = 16)
    @JvmField val HONEYCOMB_BLOCK = register("honeycomb_block")
    @JvmField val LODESTONE = register("lodestone")
    @JvmField val CRYING_OBSIDIAN = register("crying_obsidian")
    @JvmField val BLACKSTONE = register("blackstone")
    @JvmField val BLACKSTONE_SLAB = register("blackstone_slab")
    @JvmField val BLACKSTONE_STAIRS = register("blackstone_stairs")
    @JvmField val GILDED_BLACKSTONE = register("gilded_blackstone")
    @JvmField val POLISHED_BLACKSTONE = register("polished_blackstone")
    @JvmField val POLISHED_BLACKSTONE_SLAB = register("polished_blackstone_slab")
    @JvmField val POLISHED_BLACKSTONE_STAIRS = register("polished_blackstone_stairs")
    @JvmField val CHISELED_POLISHED_BLACKSTONE = register("chiseled_polished_blackstone")
    @JvmField val POLISHED_BLACKSTONE_BRICKS = register("polished_blackstone_bricks")
    @JvmField val POLISHED_BLACKSTONE_BRICK_SLAB = register("polished_blackstone_brick_slab")
    @JvmField val POLISHED_BLACKSTONE_BRICK_STAIRS = register("polished_blackstone_brick_stairs")
    @JvmField val CRACKED_POLISHED_BLACKSTONE_BRICKS = register("cracked_polished_blackstone_bricks")
    @JvmField val RESPAWN_ANCHOR = register("respawn_anchor")
    @JvmField val CANDLE = register("candle")
    @JvmField val WHITE_CANDLE = register("white_candle")
    @JvmField val ORANGE_CANDLE = register("orange_candle")
    @JvmField val MAGENTA_CANDLE = register("magenta_candle")
    @JvmField val LIGHT_BLUE_CANDLE = register("light_blue_candle")
    @JvmField val YELLOW_CANDLE = register("yellow_candle")
    @JvmField val LIME_CANDLE = register("lime_candle")
    @JvmField val PINK_CANDLE = register("pink_candle")
    @JvmField val GRAY_CANDLE = register("gray_candle")
    @JvmField val LIGHT_GRAY_CANDLE = register("light_gray_candle")
    @JvmField val CYAN_CANDLE = register("cyan_candle")
    @JvmField val PURPLE_CANDLE = register("purple_candle")
    @JvmField val BLUE_CANDLE = register("blue_candle")
    @JvmField val BROWN_CANDLE = register("brown_candle")
    @JvmField val GREEN_CANDLE = register("green_candle")
    @JvmField val RED_CANDLE = register("red_candle")
    @JvmField val BLACK_CANDLE = register("black_candle")
    @JvmField val SMALL_AMETHYST_BUD = register("small_amethyst_bud")
    @JvmField val MEDIUM_AMETHYST_BUD = register("medium_amethyst_bud")
    @JvmField val LARGE_AMETHYST_BUD = register("large_amethyst_bud")
    @JvmField val AMETHYST_CLUSTER = register("amethyst_cluster")
    @JvmField val POINTED_DRIPSTONE = register("pointed_dripstone")

    // @formatter:on
    @Suppress("MaxLineLength")
    private fun register(
        key: String,
        rarity: ItemRarity = ItemRarity.COMMON,
        maximumAmount: Int = 64,
        durability: Int = 0,
        isFireResistant: Boolean = false
    ) = Registries.register(Registries.ITEM, key, ItemType(Key.key(key), rarity, maximumAmount, durability, isFireResistant))
}
