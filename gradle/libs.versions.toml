metadata.format.version = "1.1"

[versions]

# API
adventure = "4.13.0"
configurate = "4.1.2"
log4j = "2.20.0"
kotlin = "1.8.20"
coroutines = "1.6.4"
kotlinCollections = "0.3.5"
guava = "31.1-jre"
gson = "2.10.1"
commonsLang = "3.12.0"
guice = "5.1.0"
kotlinGuice = "1.6.0"
brigadier = "1.0.0-SNAPSHOT"
annotations = "24.0.1"

# Generation
kotlinpoet = "1.13.0"

# Server
tca = "1.3.0"
jline = "3.23.0"
dataConverter = "1.0.0-SNAPSHOT"
nbt = "5.0"
serialization = "1.3.2"
articData = "1.19.3-21bc926b"
caffeine = "3.1.5"
fastutil = "8.5.12"
flare = "2.0.1"
clikt = "3.5.2"
bstats = "3.0.2"
jctools = "4.0.1"
hydrazine = "1.8.1"

# Test
junit-jupiter = "5.9.2"
junit-platform = "1.9.2"
mockk = "1.13.4"
bytebuddy = "1.14.4"
jimfs = "1.2"
reflections = "0.10.2"
equalsVerifier = "3.14.1"
jsonassert = "1.5.1"

# Extras
ksp = "1.8.20-1.0.10"
apache-httpclient = "5.2.1"
grgit = "5.0.0"

# Plugin versions
licenser = "0.6.1"
dokka = "1.8.10"
detekt = "1.22.0"
vanillaGradle = "0.2.1-SNAPSHOT"
shadow = "8.1.1"

[libraries]

# Kotlin
kotlin-stdlib = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib", version.ref = "kotlin" }
kotlin-reflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect", version.ref = "kotlin" }
kotlin-test-junit = { group = "org.jetbrains.kotlin", name = "kotlin-test-junit5", version.ref = "kotlin" }
kotlinx-coroutines = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-collections-immutable = { group = "org.jetbrains.kotlinx", name = "kotlinx-collections-immutable", version.ref = "kotlinCollections" }

# Adventure
adventure-api = { group = "net.kyori", name = "adventure-api", version.ref = "adventure" }
adventure-extraKotlin = { group = "net.kyori", name = "adventure-extra-kotlin", version.ref = "adventure" }
adventure-minimessage = { group = "net.kyori", name = "adventure-text-minimessage", version.ref = "adventure" }
adventure-serializer-gson = { group = "net.kyori", name = "adventure-text-serializer-gson", version.ref = "adventure" }
adventure-serializer-legacy = { group = "net.kyori", name = "adventure-text-serializer-legacy", version.ref = "adventure" }
adventure-serializer-plain = { group = "net.kyori", name = "adventure-text-serializer-plain", version.ref = "adventure" }
adventure-serializer-configurate = { group = "net.kyori", name = "adventure-serializer-configurate4", version.ref = "adventure" }

# Configurate
configurate-core = { group = "org.spongepowered", name = "configurate-core", version.ref = "configurate" }
configurate-gson = { group = "org.spongepowered", name = "configurate-gson", version.ref = "configurate" }
configurate-hocon = { group = "org.spongepowered", name = "configurate-hocon", version.ref = "configurate" }
configurate-yaml = { group = "org.spongepowered", name = "configurate-yaml", version.ref = "configurate" }
configurate-extraKotlin = { group = "org.spongepowered", name = "configurate-extra-kotlin", version.ref = "configurate" }

# General API
guava = { group = "com.google.guava", name = "guava", version.ref = "guava" }
commonsLang = { group = "org.apache.commons", name = "commons-lang3", version.ref = "commonsLang" }
guice = { group = "com.google.inject", name = "guice", version.ref = "guice" }
kotlinGuice = { group = "dev.misfitlabs.kotlinguice4", name = "kotlin-guice", version.ref = "kotlinGuice" }
brigadier = { group = "org.kryptonmc", name = "krypton-brigadier", version.ref = "brigadier" }
annotations = { group = "org.jetbrains", name = "annotations", version.ref = "annotations" }

# Logging
log4j-api = { group = "org.apache.logging.log4j", name = "log4j-api", version.ref = "log4j" }
log4j-core = { group = "org.apache.logging.log4j", name = "log4j-core", version.ref = "log4j" }

# User input
jline-jansi = { group = "org.jline", name = "jline-terminal-jansi", version.ref = "jline" }
tca = { group = "net.minecrell", name = "terminalconsoleappender", version.ref = "tca" }
clikt = { group = "com.github.ajalt.clikt", name = "clikt", version.ref = "clikt" }

# Data
dataConverter = { group = "ca.spottedleaf", name = "dataconverter", version.ref = "dataConverter" }
articData = { group = "de.articdive", name = "articdata", version.ref = "articData" }
gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson" }
nbt = { group = "org.kryptonmc", name = "nbt-common", version.ref = "nbt" }
nbt-kotlin = { group = "org.kryptonmc", name = "nbt-extra-kotlin", version.ref = "nbt" }
serialization = { group = "org.kryptonmc", name = "serialization-core", version.ref = "serialization" }
serialization-gson = { group = "org.kryptonmc", name = "serialization-gson", version.ref = "serialization" }
serialization-nbt = { group = "org.kryptonmc", name = "serialization-nbt", version.ref = "serialization" }
bstats = { group = "org.bstats", name = "bstats-base", version.ref = "bstats" }

# Generation
kotlinpoet = { group = "com.squareup", name = "kotlinpoet", version.ref = "kotlinpoet" }

# Collections and caching
fastutil = { group = "it.unimi.dsi", name = "fastutil", version.ref = "fastutil" }
flare-fastutil = { group = "space.vectrix.flare", name = "flare-fastutil", version.ref = "flare" }
caffeine = { group = "com.github.ben-manes.caffeine", name = "caffeine", version.ref = "caffeine" }
jctools = { group = "org.jctools", name = "jctools-core", version.ref = "jctools" }

# Pathfinding
hydrazine = { group = "com.github.MadMartian", name = "hydrazine-path-finding", version.ref = "hydrazine" }

# Testing
junit-api = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "junit-jupiter" }
junit-engine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "junit-jupiter" }
junit-platform-runner = { group = "org.junit.platform", name = "junit-platform-runner", version.ref = "junit-platform" }
mockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }
bytebuddy = { group = "net.bytebuddy", name = "byte-buddy", version.ref = "bytebuddy" }
jimfs = { group = "com.google.jimfs", name = "jimfs", version.ref = "jimfs" }
reflections = { group = "org.reflections", name = "reflections", version.ref = "reflections" }
equalsVerifier = { group = "nl.jqno.equalsverifier", name = "equalsverifier", version.ref = "equalsVerifier" }
jsonassert = { group = "org.skyscreamer", name = "jsonassert", version.ref = "jsonassert" }

# Extras
ksp = { group = "com.google.devtools.ksp", name = "symbol-processing-api", version.ref = "ksp" }
apache-httpclient = { group = "org.apache.httpcomponents.client5", name = "httpclient5", version.ref = "apache-httpclient" }
grgit = { group = "org.ajoberstar.grgit", name = "grgit-core", version.ref = "grgit" }

# Plugins
plugin-licenser = { group = "gradle.plugin.org.cadixdev.gradle", name = "licenser", version.ref = "licenser" }
plugin-kotlin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
plugin-dokka = { group = "org.jetbrains.dokka", name = "dokka-gradle-plugin", version.ref = "dokka" }
plugin-detekt = { group = "io.gitlab.arturbosch.detekt", name = "detekt-gradle-plugin", version.ref = "detekt" }
plugin-vanillaGradle = { group = "org.spongepowered", name = "vanillagradle", version.ref = "vanillaGradle" }
plugin-shadow = { group = "com.github.johnrengelman", name = "shadow", version.ref = "shadow" }
plugin-ksp = { group = "com.google.devtools.ksp", name = "symbol-processing-gradle-plugin", version.ref = "ksp" }

# Extras dependencies
dokka-core = { group = "org.jetbrains.dokka", name = "dokka-core", version.ref = "dokka" }
dokka-base = { group = "org.jetbrains.dokka", name = "dokka-base", version.ref = "dokka" }
